var N=null,E="",T="t",U="u",searchIndex={};
var R=["Marks async function to be executed by selected runtime.","Marks async function to be executed by runtime, suitable…","metadata","set_permissions","permissions","openoptions","create","tokio::fs","An error returned when an operation could not be completed…","stderr","result","context","registration","poll_read_ready","poll_write_ready","writehalf","is_pair_of","into_inner","with_capacity","bufstream","get_ref","get_mut","get_pin_mut","Returns a reference to the internally buffered data.","Gets a reference to the underlying reader.","Gets a mutable reference to the underlying reader.","Gets a pinned mutable reference to the underlying reader.","seekfrom","Reads bytes from a source.","Pulls some bytes from this source into the specified…","read_to_string","An extension trait which adds utility methods to…","Writes an unsigned 8-bit integer to the underlying writer.","shutdown","ReadHalf","WriteHalf","tokio::net","from_std","tcplistener","socketaddr","incoming","poll_accept","tokio::net::tcp","tosocketaddrs","tcpstream","local_addr","poll_peek","Receives data on the socket from the remote address to…","option","duration","Gets the value of the `IP_TTL` option for this socket.","Sets the value for the `IP_TTL` option on this socket.","udpsocket","Returns a future that sends data on the socket to the…","set_ttl","ipv4addr","ipv6addr","tokio::net::udp","reuniteerror","recv_from","Returns a future that receives a single datagram on the…","Returns a future that receives a single datagram message…","Attempts to put the two \"halves\" of a `UdpSocket` back…","Incoming","unixdatagram","connect","send_to","Receives data from the socket.","Returns the local address that this socket is bound to.","peer_addr","Shuts down the read, write, or both halves of this…","tokio::net::unix","unixlistener","take_error","Returns the value of the `SO_ERROR` option.","Returns a stream over the connections being received on…","unixstream","Creates an unnamed pair of connected sockets.","AsyncBufRead","Reads bytes asynchronously.","poll_fill_buf","Attempts to return the contents of the internal buffer,…","Tells this buffer that `amt` bytes have been consumed from…","AsyncRead","prepare_uninitialized_buffer","tokio::io","Prepares an uninitialized buffer to be safe to pass to…","poll_read","tokio::prelude","Attempts to read from the `AsyncRead` into `buf`.","poll_read_buf","AsyncWrite","Writes bytes asynchronously.","poll_write","Attempt to write bytes from `buf` into the object.","poll_flush","Attempts to flush the object, ensuring that any buffered…","poll_shutdown","Initiates or attempts to shut down this writer, returning…","poll_write_buf","Writes a `Buf` into this value, returning how many bytes…","command","Executes the command as a child process, waiting for it to…","The Tokio runtime.","Returns a Handle view over the currently running Runtime","trycurrenterror","joinhandle","Enter the runtime context","broadcast","There are no more active senders implying no further…","senderror","tryrecverror","tokio::sync","Receives the next value for this receiver.","Attempts to return a pending value on this receiver…","trysenderror","try_recv","Closes the receiving half of a channel, without dropping it.","SendError","RecvError","TryRecvError","mutexguard","trylockerror","Receiver","tokio::sync::oneshot","semaphorepermit","tryacquireerror","tokio::sync::watch","Spawns a new asynchronous task, returning a `JoinHandle`…","Consumes the join error, returning the object with which…","joinerror","spawn_local","Accesses the current task-local and runs the provided…","accesserror","Creates new `Interval` that yields with interval of…","interval","Require a `Future` to complete before the specified…","A queue of delayed elements.","DelayQueue","delayqueue","Sets the delay of the item associated with `key` to expire…","tokio::time","instant","Returns `true` if the error was caused by the timer being…","Returns the amount of time elapsed from another instant to…","Wait on multiple concurrent branches, returning when all…","borrow_mut","try_from","try_into","clone_into","type_id","try_poll_next","to_string","to_owned","tokio::process","try_poll","tokio::runtime","tokio::signal::unix","tokio::stream","tokio::sync::broadcast","tokio::sync::mpsc","tokio::sync::mpsc::error","tokio::sync::oneshot::error","tokio::sync::watch::error","tokio::task","tokio::time::delay_queue","errorkind","ordering","formatter","partial_cmp","consume","start_seek","poll_complete","bufwriter","bufreader","signalkind","default","recverror","Consumes stream, returning the tokio I/O object.","add_assign","sub_assign","deref_mut","as_raw_fd","poll_next","size_hint","read_until","Reads all bytes into `buf` until the delimiter `byte` or…","readuntil","read_line","Reads all bytes until a newline (the 0xA byte) is reached,…","Returns a stream of the contents of this reader split on…","Returns a stream over the lines of this reader. This…","Creates a new `AsyncRead` instance that chains this stream…","read_exact","Reads the exact number of bytes required to fill `buf`.","readexact","Reads an unsigned 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16-bit integer in big-endian order from…","Reads a signed 16-bit integer in big-endian order from the…","Reads an unsigned 32-bit integer in big-endian order from…","Reads a signed 32-bit integer in big-endian order from the…","Reads an unsigned 64-bit integer in big-endian order from…","Reads an signed 64-bit integer in big-endian order from…","read_u128","Reads an unsigned 128-bit integer in big-endian order from…","read_i128","Reads an signed 128-bit integer in big-endian order from…","read_to_end","Reads all bytes until EOF in this source, placing them…","readtoend","Reads all bytes until EOF in this source, appending them…","readtostring","Creates an adaptor which reads at most `limit` bytes from…","Creates a future which will seek an IO object, and then…","Writes a buffer into this writer, returning how many bytes…","write_buf","Writes a buffer into this writer, advancing the buffer's…","write_all","Attempts to write an entire buffer into this writer.","write_u16","Writes an unsigned 16-bit integer in big-endian order to…","write_i16","Writes a signed 16-bit integer in big-endian order to the…","write_u32","Writes an unsigned 32-bit integer in big-endian order to…","write_i32","Writes a signed 32-bit integer in big-endian order to the…","write_u64","Writes an unsigned 64-bit integer in big-endian order to…","write_i64","Writes an signed 64-bit integer in big-endian order to the…","write_u128","Writes an unsigned 128-bit integer in big-endian order to…","writeu128","write_i128","Writes an signed 128-bit integer in big-endian order to…","writei128","Flushes this output stream, ensuring that all…","Shuts down the output stream, ensuring that the value can…","Creates a new `Duration` from the specified number of…","Returns the fractional part of this `Duration`, in whole…","checked_add","checked_sub","Returns the number of seconds contained by this `Duration`…","OpenOptions","ErrorKind","PollEvented","Registration","BufReader","BufStream","BufWriter","AsyncSeek","AsyncBufReadExt","AsyncReadExt","AsyncSeekExt","AsyncWriteExt","TcpListener","TcpStream","ReuniteError","UdpSocket","UnixDatagram","UnixListener","UnixStream","SignalKind","StreamExt","BarrierWaitResult","UnboundedReceiver","UnboundedSender","TrySendError","Semaphore","SemaphorePermit","JoinError","ChildStdin","ChildStdout","ChildStderr","TryCurrentError","MutexGuard","RwLockReadGuard","RwLockWriteGuard","ClosedError","JoinHandle","read_buf","Provides a `Stream` and `Sink` interface for reading and…","framedparts","Returns a reference to the underlying I/O stream wrapped…","Returns a mutable reference to the underlying I/O stream…","read_buffer","Returns a reference to the read buffer.","Returns a reference to the underlying decoder.","Returns a mutable reference to the underlying decoder.","Creates a new length delimited codec builder with default…","max_frame_length","lengthdelimitedcodec","framedread","framedwrite","tokio_util::codec","bytesmut","asyncwrite","asyncread","tokio_util","A unified `Stream` and `Sink` interface to an underlying…","Extension trait that allows converting a type implementing…","Wraps `self` with a compatibility layer that implements…","compat_write","tokio_util::codec::length_delimited","tokio_util::udp","tokio_util::compat","linescodecerror","decode_eof","bytescodec","linescodec","poll_ready","start_send","poll_close","A default method available to be called when there are no…","FramedParts","LinesCodecError","BytesCodec","FramedRead","FramedWrite","LengthDelimitedCodec","LinesCodec","UdpFramed","FuturesAsyncReadCompatExt","FuturesAsyncWriteCompatExt","Tokio02AsyncReadCompatExt","Tokio02AsyncWriteCompatExt","LengthDelimitedCodecError","tlsconnector","tlsacceptor","TlsStream","TlsConnector","TlsAcceptor","block_on","Sequence a `read` operation.","Sequence a `write` operation.","tokio_test","tokio_test::io","tokio_test::task","builder","Builder"];
searchIndex["test_cat"]={"doc":"A cat-like utility that can be used as a subprocess to…","i":[],"p":[]};
searchIndex["tests_build"]={"doc":E,"i":[],"p":[]};
searchIndex["tests_integration"]={"doc":E,"i":[],"p":[]};
searchIndex["tokio"]={"doc":"A runtime for writing reliable, asynchronous, and slim…","i":[[23,"main","tokio",R[0],N,N],[23,"test",E,R[1],N,N],[5,"spawn",E,R[128],N,[[[T]],[R[106]]]],[0,"fs",E,"Asynchronous file and standard stream adaptation.",N,N],[3,"File",R[7],"A reference to an open file on the filesystem.",N,N],[3,R[245],E,"Options and flags which can be used to configure how a…",N,N],[3,"DirEntry",E,"Entries returned by the [`ReadDir`] stream.",N,N],[3,"ReadDir",E,"Stream of the entries in a directory.",N,N],[5,"canonicalize",E,"Returns the canonical, absolute form of a path with all…",N,[[]]],[5,"create_dir",E,"Creates a new, empty directory at the provided path",N,[[]]],[5,"create_dir_all",E,"Recursively creates a directory and all of its parent…",N,[[]]],[5,"hard_link",E,"Creates a new hard link on the filesystem.",N,[[]]],[5,R[2],E,"Given a path, queries the file system to get information…",N,[[]]],[5,"read",E,"Reads the entire contents of a file into a bytes vector.",N,[[]]],[5,"read_dir",E,"Returns a stream over the entries within a directory.",N,[[]]],[5,"read_link",E,"Reads a symbolic link, returning the file that the link…",N,[[]]],[5,R[30],E,"Creates a future which will open a file for reading and…",N,[[]]],[5,"remove_dir",E,"Removes an existing, empty directory.",N,[[]]],[5,"remove_dir_all",E,"Removes a directory at this path, after removing all its…",N,[[]]],[5,"remove_file",E,"Removes a file from the filesystem.",N,[[]]],[5,"rename",E,"Renames a file or directory to a new name, replacing the…",N,[[]]],[5,R[3],E,"Changes the permissions found on a file or a directory.",N,[[[R[4]]]]],[5,"symlink_metadata",E,"Queries the file system metadata for a path.",N,[[]]],[5,"write",E,"Creates a future that will open a file for writing and…",N,[[["asref"],["unpin"]]]],[5,"copy",E,"Copies the contents of one file to another. This function…",N,[[["path"],["asref",["path"]]]]],[11,"open",E,"Attempts to open a file in read-only mode.",0,[[]]],[11,R[6],E,"Opens a file in write-only mode.",0,[[]]],[11,R[37],E,"Converts a [`std::fs::File`][std] to a…",0,[[["file"]],["file"]]],[11,"seek",E,"Seeks to an offset, in bytes, in a stream.",0,[[[R[27]],["self"]]]],[11,"sync_all",E,"Attempts to sync all OS-internal metadata to disk.",0,[[["self"]]]],[11,"sync_data",E,"This function is similar to `sync_all`, except that it may…",0,[[["self"]]]],[11,"set_len",E,"Truncates or extends the underlying file, updating the…",0,[[["u64"],["self"]]]],[11,R[2],E,"Queries metadata about the underlying file.",0,[[["self"]]]],[11,"try_clone",E,"Create a new `File` instance that shares the same…",0,[[["self"]]]],[11,"into_std",E,"Destructures `File` into a [`std::fs::File`][std]. This…",0,[[]]],[11,"try_into_std",E,"Tries to immediately destructure `File` into a…",0,[[],[["file"],[R[10],["file"]]]]],[11,R[3],E,"Changes the permissions on the underlying file.",0,[[["self"],[R[4]]]]],[11,"new",E,"Creates a blank new set of options ready for configuration.",1,[[],[R[5]]]],[11,"read",E,"Sets the option for read access.",1,[[["self"],["bool"]],[R[5]]]],[11,"write",E,"Sets the option for write access.",1,[[["self"],["bool"]],[R[5]]]],[11,"append",E,"Sets the option for the append mode.",1,[[["self"],["bool"]],[R[5]]]],[11,"truncate",E,"Sets the option for truncating a previous file.",1,[[["self"],["bool"]],[R[5]]]],[11,R[6],E,"Sets the option for creating a new file.",1,[[["self"],["bool"]],[R[5]]]],[11,"create_new",E,"Sets the option to always create a new file.",1,[[["self"],["bool"]],[R[5]]]],[11,"open",E,"Opens a file at `path` with the options specified by `self`.",1,[[["self"]]]],[0,"os",E,"OS-specific functionality.",N,N],[0,"unix","tokio::fs::os","Unix-specific extensions to primitives in the `tokio_fs`…",N,N],[5,"symlink","tokio::fs::os::unix","Creates a new symbolic link on the filesystem.",N,[[]]],[11,"next_entry",R[7],"Returns the next entry in the directory stream.",2,[[["self"]]]],[11,"path",E,"Returns the full path to the file that this entry…",3,[[["self"]],["pathbuf"]]],[11,"file_name",E,"Returns the bare file name of this directory entry without…",3,[[["self"]],["osstring"]]],[11,R[2],E,"Returns the metadata for the file that this entry points at.",3,[[["self"]]]],[11,"file_type",E,"Returns the file type for the file that this entry points…",3,[[["self"]]]],[0,"io","tokio","Traits, helpers, and type definitions for asynchronous I/O…",N,N],[3,"Error",R[85],"The error type for I/O operations of the [`Read`],…",N,N],[4,R[246],E,"A list specifying general categories of I/O error.",N,N],[13,"NotFound",E,"An entity was not found, often a file.",4,N],[13,"PermissionDenied",E,"The operation lacked the necessary privileges to complete.",4,N],[13,"ConnectionRefused",E,"The connection was refused by the remote server.",4,N],[13,"ConnectionReset",E,"The connection was reset by the remote server.",4,N],[13,"ConnectionAborted",E,"The connection was aborted (terminated) by the remote…",4,N],[13,"NotConnected",E,"The network operation failed because it was not connected…",4,N],[13,"AddrInUse",E,"A socket address could not be bound because the address is…",4,N],[13,"AddrNotAvailable",E,"A nonexistent interface was requested or the requested…",4,N],[13,"BrokenPipe",E,"The operation failed because a pipe was closed.",4,N],[13,"AlreadyExists",E,"An entity already exists, often a file.",4,N],[13,"WouldBlock",E,"The operation needs to block to complete, but the blocking…",4,N],[13,"InvalidInput",E,"A parameter was incorrect.",4,N],[13,"InvalidData",E,"Data not valid for the operation were encountered.",4,N],[13,"TimedOut",E,"The I/O operation's timeout expired, causing it to be…",4,N],[13,"WriteZero",E,R[8],4,N],[13,"Interrupted",E,"This operation was interrupted.",4,N],[13,"Other",E,"Any I/O error not part of this list.",4,N],[13,"UnexpectedEof",E,R[8],4,N],[6,"Result",E,"A specialized `Result` type for I/O operations.",N,N],[3,R[247],E,"Associates an I/O resource that implements the…",N,N],[3,R[248],E,"Associates an I/O resource with the reactor instance that…",N,N],[3,"Stderr",E,"A handle to the standard error stream of a process.",N,N],[3,"Stdin",E,"A handle to the standard input stream of a process.",N,N],[3,"Stdout",E,"A handle to the standard output stream of a process.",N,N],[3,R[34],E,"The readable half of a value returned from `split`.",N,N],[3,R[35],E,"The writable half of a value returned from `split`.",N,N],[3,"Seek",E,"Future for the `seek` method.",N,N],[3,R[249],E,"The `BufReader` struct adds buffering to any reader.",N,N],[3,R[250],E,"Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and…",N,N],[3,R[251],E,"Wraps a writer and buffers its output.",N,N],[3,"Copy",E,"A future that asynchronously copies the entire contents of…",N,N],[3,"Empty",E,"An async reader which is always at EOF.",N,N],[3,"Lines",E,"Stream for the `lines` method.",N,N],[3,"Repeat",E,"An async reader which yields one byte over and over and…",N,N],[3,"Sink",E,"An async writer which will move data into the void.",N,N],[3,"Split",E,"Stream for the `split` method.",N,N],[3,"Take",E,"Stream for the `take` method.",N,N],[5,R[9],E,"Constructs a new handle to the standard error of the…",N,[[],[R[9]]]],[5,"stdin",E,"Constructs a new handle to the standard input of the…",N,[[],["stdin"]]],[5,"stdout",E,"Constructs a new handle to the standard output of the…",N,[[],["stdout"]]],[5,"split",E,"Splits a single value implementing `AsyncRead +…",N,[[[T]]]],[5,"copy",E,"Asynchronously copies the entire contents of a reader into…",N,[[["w"],["r"]],[["copy"],["sized"]]]],[5,"empty",E,"Creates a new empty async reader.",N,[[],["empty"]]],[5,"repeat",E,"Creates an instance of an async reader that infinitely…",N,[[["u8"]],["repeat"]]],[5,"sink",E,"Creates an instance of an async writer which will…",N,[[],["sink"]]],[11,"new",E,"Creates a new `PollEvented` associated with the default…",5,[[["e"]],[R[10]]]],[11,R[20],E,"Returns a shared reference to the underlying I/O object…",5,[[["self"]],["e"]]],[11,R[21],E,"Returns a mutable reference to the underlying I/O object…",5,[[["self"]],["e"]]],[11,R[17],E,"Consumes self, returning the inner I/O object",5,[[],[R[10]]]],[11,R[13],E,"Checks the I/O resource's read readiness state.",5,[[["ready"],["self"],[R[11]]],[["poll",[R[10]]],[R[10],["ready"]]]]],[11,"clear_read_ready",E,"Clears the I/O resource's read readiness state and…",5,[[["ready"],["self"],[R[11]]],[R[10]]]],[11,R[14],E,"Checks the I/O resource's write readiness state.",5,[[["self"],[R[11]]],[["poll",[R[10]]],[R[10],["ready"]]]]],[11,"clear_write_ready",E,"Resets the I/O resource's write readiness state and…",5,[[["self"],[R[11]]],[R[10]]]],[11,"new",E,"Registers the I/O resource with the default reactor.",6,[[[T]],[[R[12]],[R[10],[R[12]]]]]],[11,"deregister",E,"Deregisters the I/O resource from the reactor it is…",6,[[["self"],[T]],[R[10]]]],[11,R[13],E,"Polls for events on the I/O resource's read readiness…",6,[[["self"],[R[11]]],[["poll",[R[10]]],[R[10],["ready"]]]]],[11,"take_read_ready",E,"Consume any pending read readiness event.",6,[[["self"]],[[R[10],[R[48]]],[R[48],["ready"]]]]],[11,R[14],E,"Polls for events on the I/O resource's write readiness…",6,[[["self"],[R[11]]],[["poll",[R[10]]],[R[10],["ready"]]]]],[11,"take_write_ready",E,"Consumes any pending write readiness event.",6,[[["self"]],[[R[10],[R[48]]],[R[48],["ready"]]]]],[11,R[16],E,"Checks if this `ReadHalf` and some `WriteHalf` were split…",7,[[["self"],[R[15]]],["bool"]]],[11,"unsplit",E,"Reunites with a previously split `WriteHalf`.",7,[[[R[15]]],[T]]],[11,R[16],E,"Check if this `WriteHalf` and some `ReadHalf` were split…",8,[[["readhalf"],["self"]],["bool"]]],[11,"new",E,"Creates a new `BufReader` with a default buffer capacity.…",9,[[["r"]],["self"]]],[11,R[18],E,"Creates a new `BufReader` with the specified buffer…",9,[[["usize"],["r"]],["self"]]],[11,R[20],E,R[24],9,[[["self"]],["r"]]],[11,R[21],E,R[25],9,[[["self"]],["r"]]],[11,R[22],E,R[26],9,[[["self"],["pin"]],[["pin"],["r"]]]],[11,R[17],E,"Consumes this `BufWriter`, returning the underlying reader.",9,[[],["r"]]],[11,"buffer",E,R[23],9,[[["self"]]]],[11,"new",E,"Wraps a type in both [`BufWriter`] and [`BufReader`].",10,[[["rw"]],[R[19]]]],[11,R[18],E,"Creates a `BufStream` with the specified [`BufReader`]…",10,[[["rw"],["usize"]],[R[19]]]],[11,R[20],E,"Gets a reference to the underlying I/O object.",10,[[["self"]],["rw"]]],[11,R[21],E,"Gets a mutable reference to the underlying I/O object.",10,[[["self"]],["rw"]]],[11,R[22],E,"Gets a pinned mutable reference to the underlying I/O…",10,[[["self"],["pin"]],[["pin"],["rw"]]]],[11,R[17],E,"Consumes this `BufStream`, returning the underlying I/O…",10,[[],["rw"]]],[11,"new",E,"Creates a new `BufWriter` with a default buffer capacity.…",11,[[["w"]],["self"]]],[11,R[18],E,"Creates a new `BufWriter` with the specified buffer…",11,[[["w"],["usize"]],["self"]]],[11,R[20],E,"Gets a reference to the underlying writer.",11,[[["self"]],["w"]]],[11,R[21],E,"Gets a mutable reference to the underlying writer.",11,[[["self"]],["w"]]],[11,R[22],E,"Gets a pinned mutable reference to the underlying writer.",11,[[["self"],["pin"]],[["w"],["pin"]]]],[11,R[17],E,"Consumes this `BufWriter`, returning the underlying writer.",11,[[],["w"]]],[11,"buffer",E,R[23],11,[[["self"]]]],[11,"next_line",E,"Returns the next line in the stream.",12,[[["self"]]]],[11,"next_segment",E,"Returns the next segment in the stream.",13,[[["self"]]]],[11,"limit",E,"Returns the remaining number of bytes that can be read…",14,[[["self"]],["u64"]]],[11,"set_limit",E,"Sets the number of bytes that can be read before this…",14,[[["self"],["u64"]]]],[11,R[20],E,R[24],14,[[["self"]],["r"]]],[11,R[21],E,R[25],14,[[["self"]],["r"]]],[11,R[22],E,R[26],14,[[["self"],["pin"]],[["pin"],["r"]]]],[11,R[17],E,"Consumes the `Take`, returning the wrapped reader.",14,[[],["r"]]],[8,R[78],E,R[79],N,N],[10,R[80],E,R[81],15,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[10,R[170],E,R[82],15,[[["self"],["usize"],["pin"]]]],[8,R[83],E,R[28],N,N],[11,R[84],E,R[86],16,[[["self"]],["bool"]]],[10,R[87],E,R[89],16,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[90],E,R[29],16,[[["b"],[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[8,R[252],E,"Seek bytes asynchronously.",N,N],[10,R[171],E,"Attempts to seek to an offset, in bytes, in a stream.",17,[[[R[27]],[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[10,R[172],E,"Waits for a seek operation to complete.",17,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10],["u64"]]]]],[8,R[91],E,R[92],N,N],[10,R[93],E,R[94],18,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10],["usize","error"]]]]],[10,R[95],E,R[96],18,[[[R[11]],["self"],["pin"]],[[R[10],["error"]],["poll",[R[10]]]]]],[10,R[97],E,R[98],18,[[[R[11]],["self"],["pin"]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[99],E,R[100],18,[[["b"],[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10],["usize","error"]]]]],[8,R[253],E,R[31],N,N],[11,R[185],E,R[186],19,[[["self"],["vec"],["u8"]],[R[187]]]],[11,R[188],E,R[189],19,[[["string"],["self"]],["readline"]]],[11,"split",E,R[190],19,[[["u8"]],["split"]]],[11,"lines",E,R[191],19,[[],["lines"]]],[8,R[254],E,R[28],N,N],[11,"chain",E,R[192],20,[[["r"]],["chain"]]],[11,"read",E,R[29],20,[[["self"]],["read"]]],[11,R[282],E,R[29],20,[[["self"],["b"]],["readbuf"]]],[11,R[193],E,R[194],20,[[["self"]],[R[195]]]],[11,"read_u8",E,R[196],20,[[["self"]],[["self"],["readu8"]]]],[11,"read_i8",E,R[197],20,[[["self"]],[["readi8"],["self"]]]],[11,"read_u16",E,R[198],20,[[["self"]],[["self"],["readu16"]]]],[11,"read_i16",E,R[199],20,[[["self"]],[["readi16"],["self"]]]],[11,"read_u32",E,R[200],20,[[["self"]],[["self"],["readu32"]]]],[11,"read_i32",E,R[201],20,[[["self"]],[["self"],["readi32"]]]],[11,"read_u64",E,R[202],20,[[["self"]],[["self"],["readu64"]]]],[11,"read_i64",E,R[203],20,[[["self"]],[["self"],["readi64"]]]],[11,R[204],E,R[205],20,[[["self"]],[["self"],["readu128"]]]],[11,R[206],E,R[207],20,[[["self"]],[["readi128"],["self"]]]],[11,R[208],E,R[209],20,[[["self"],["vec"]],[R[210]]]],[11,R[30],E,R[211],20,[[["string"],["self"]],[R[212]]]],[11,"take",E,R[213],20,[[["u64"]],["take"]]],[8,R[255],E,R[31],N,N],[11,"seek",E,R[214],21,[[["self"],[R[27]]],["seek"]]],[8,R[256],E,"Writes bytes to a sink.",N,N],[11,"write",E,R[215],22,[[["self"]],["write"]]],[11,R[216],E,R[217],22,[[["self"],["b"]],["writebuf"]]],[11,R[218],E,R[219],22,[[["self"]],["writeall"]]],[11,"write_u8",E,R[32],22,[[["self"],["u8"]],[["self"],["writeu8"]]]],[11,"write_i8",E,R[32],22,[[["self"],["i8"]],[["writei8"],["self"]]]],[11,R[220],E,R[221],22,[[["u16"],["self"]],[["writeu16"],["self"]]]],[11,R[222],E,R[223],22,[[["self"],["i16"]],[["self"],["writei16"]]]],[11,R[224],E,R[225],22,[[["self"],["u32"]],[["self"],["writeu32"]]]],[11,R[226],E,R[227],22,[[["self"],["i32"]],[["writei32"],["self"]]]],[11,R[228],E,R[229],22,[[["self"],["u64"]],[["writeu64"],["self"]]]],[11,R[230],E,R[231],22,[[["i64"],["self"]],[["writei64"],["self"]]]],[11,R[232],E,R[233],22,[[["self"],["u128"]],[[R[234]],["self"]]]],[11,R[235],E,R[236],22,[[["self"],["i128"]],[["self"],[R[237]]]]],[11,"flush",E,R[238],22,[[["self"]],["flush"]]],[11,R[33],E,R[239],22,[[["self"]],[R[33]]]],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",N,N],[3,R[257],R[36],"A TCP socket server, listening for connections.",N,N],[3,R[258],E,"A TCP stream between a local and a remote socket.",N,N],[3,R[260],E,"A UDP socket",N,N],[3,R[261],E,"An I/O object representing a Unix datagram socket.",N,N],[3,R[262],E,"A Unix socket which can accept connections from other Unix…",N,N],[3,R[263],E,"A structure representing a connected Unix socket.",N,N],[5,"lookup_host",E,"Performs a DNS resolution.",N,[[[T]]]],[0,"tcp",E,"TCP utility types",N,N],[3,R[63],R[42],"Stream returned by the `TcpListener::incoming` function…",N,N],[3,R[34],E,"Read half of a `TcpStream`.",N,N],[3,R[35],E,"Write half of a `TcpStream`.",N,N],[11,"bind",R[36],"Creates a new TcpListener which will be bound to the…",23,[[[R[43]]]]],[11,"accept",E,"Accepts a new incoming connection from this listener.",23,[[["self"]]]],[11,R[41],E,"Attempts to poll `SocketAddr` and `TcpStream` bound to…",23,[[["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[37],E,"Creates a new TCP listener from the standard library's TCP…",23,[[[R[38]]],[[R[10],[R[38]]],[R[38]]]]],[11,R[45],E,"Returns the local address that this listener is bound to.",23,[[["self"]],[[R[39]],[R[10],[R[39]]]]]],[11,R[40],E,R[75],23,[[["self"]],[R[40]]]],[11,"ttl",E,R[50],23,[[["self"]],[[R[10],["u32"]],["u32"]]]],[11,R[54],E,R[51],23,[[["u32"],["self"]],[R[10]]]],[11,R[41],R[42],"Attempts to poll `TcpStream` by polling inner…",24,[[[R[11]],["self"],["pin"]],[[R[10],[R[44]]],["poll",[R[10]]]]]],[11,R[46],E,"Attempt to receive data on the socket, without removing…",25,[[["self"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,"peek",E,R[47],25,[[["self"]]]],[11,R[65],R[36],"Opens a TCP connection to a remote host.",26,[[[R[43]]]]],[11,R[37],E,"Creates new `TcpStream` from a `std::net::TcpStream`.",26,[[[R[44]]],[[R[10],[R[44]]],[R[44]]]]],[11,R[45],E,"Returns the local address that this stream is bound to.",26,[[["self"]],[[R[39]],[R[10],[R[39]]]]]],[11,R[69],E,"Returns the remote address that this stream is connected to.",26,[[["self"]],[[R[39]],[R[10],[R[39]]]]]],[11,R[46],E,"Attempts to receive data on the socket, without removing…",26,[[["self"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,"peek",E,R[47],26,[[["self"]]]],[11,R[33],E,R[70],26,[[[R[33]],["self"]],[R[10]]]],[11,"nodelay",E,"Gets the value of the `TCP_NODELAY` option on this socket.",26,[[["self"]],[[R[10],["bool"]],["bool"]]]],[11,"set_nodelay",E,"Sets the value of the `TCP_NODELAY` option on this socket.",26,[[["self"],["bool"]],[R[10]]]],[11,"recv_buffer_size",E,"Gets the value of the `SO_RCVBUF` option on this socket.",26,[[["self"]],[[R[10],["usize"]],["usize"]]]],[11,"set_recv_buffer_size",E,"Sets the value of the `SO_RCVBUF` option on this socket.",26,[[["self"],["usize"]],[R[10]]]],[11,"send_buffer_size",E,"Gets the value of the `SO_SNDBUF` option on this socket.",26,[[["self"]],[[R[10],["usize"]],["usize"]]]],[11,"set_send_buffer_size",E,"Sets the value of the `SO_SNDBUF` option on this socket.",26,[[["self"],["usize"]],[R[10]]]],[11,"keepalive",E,"Returns whether keepalive messages are enabled on this…",26,[[["self"]],[[R[10],[R[48]]],[R[48],[R[49]]]]]],[11,"set_keepalive",E,"Sets whether keepalive messages are enabled to be sent on…",26,[[[R[48],[R[49]]],["self"],[R[49]]],[R[10]]]],[11,"ttl",E,R[50],26,[[["self"]],[[R[10],["u32"]],["u32"]]]],[11,R[54],E,R[51],26,[[["u32"],["self"]],[R[10]]]],[11,"linger",E,"Reads the linger duration for this socket by getting the…",26,[[["self"]],[[R[10],[R[48]]],[R[48],[R[49]]]]]],[11,"set_linger",E,"Sets the linger duration of this socket by setting the…",26,[[[R[48],[R[49]]],["self"],[R[49]]],[R[10]]]],[11,"split",E,"Splits a `TcpStream` into a read half and a write half,…",26,[[["self"]]]],[0,"udp",E,"UDP utility types.",N,N],[3,"RecvHalf",R[57],"The recv half after `split`.",N,N],[3,R[259],E,"Error indicating two halves were not from the same socket,…",N,N],[12,"0",E,E,27,N],[12,"1",E,E,27,N],[3,"SendHalf",E,"The send half after `split`.",N,N],[11,"bind",R[36],"This function will create a new UDP socket and attempt to…",28,[[[R[43]]]]],[11,R[37],E,"Creates a new `UdpSocket` from the previously bound socket…",28,[[[R[52]]],[[R[52]],[R[10],[R[52]]]]]],[11,"split",E,"Splits the `UdpSocket` into a receive half and a send…",28,[[]]],[11,R[45],E,R[68],28,[[["self"]],[[R[39]],[R[10],[R[39]]]]]],[11,R[65],E,"Connects the UDP socket setting the default destination…",28,[[["self"],[R[43]]]]],[11,"send",E,R[53],28,[[["self"]]]],[11,"recv",E,R[61],28,[[["self"]]]],[11,R[66],E,R[53],28,[[[R[43]],["self"]]]],[11,R[59],E,R[60],28,[[["self"]]]],[11,R[108],E,"Gets the value of the `SO_BROADCAST` option for this socket.",28,[[["self"]],[[R[10],["bool"]],["bool"]]]],[11,"set_broadcast",E,"Sets the value of the `SO_BROADCAST` option for this socket.",28,[[["self"],["bool"]],[R[10]]]],[11,"multicast_loop_v4",E,"Gets the value of the `IP_MULTICAST_LOOP` option for this…",28,[[["self"]],[[R[10],["bool"]],["bool"]]]],[11,"set_multicast_loop_v4",E,"Sets the value of the `IP_MULTICAST_LOOP` option for this…",28,[[["self"],["bool"]],[R[10]]]],[11,"multicast_ttl_v4",E,"Gets the value of the `IP_MULTICAST_TTL` option for this…",28,[[["self"]],[[R[10],["u32"]],["u32"]]]],[11,"set_multicast_ttl_v4",E,"Sets the value of the `IP_MULTICAST_TTL` option for this…",28,[[["u32"],["self"]],[R[10]]]],[11,"multicast_loop_v6",E,"Gets the value of the `IPV6_MULTICAST_LOOP` option for…",28,[[["self"]],[[R[10],["bool"]],["bool"]]]],[11,"set_multicast_loop_v6",E,"Sets the value of the `IPV6_MULTICAST_LOOP` option for…",28,[[["self"],["bool"]],[R[10]]]],[11,"ttl",E,R[50],28,[[["self"]],[[R[10],["u32"]],["u32"]]]],[11,R[54],E,R[51],28,[[["u32"],["self"]],[R[10]]]],[11,"join_multicast_v4",E,"Executes an operation of the `IP_ADD_MEMBERSHIP` type.",28,[[[R[55]],["self"]],[R[10]]]],[11,"join_multicast_v6",E,"Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",28,[[[R[56]],["u32"],["self"]],[R[10]]]],[11,"leave_multicast_v4",E,"Executes an operation of the `IP_DROP_MEMBERSHIP` type.",28,[[[R[55]],["self"]],[R[10]]]],[11,"leave_multicast_v6",E,"Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",28,[[[R[56]],["u32"],["self"]],[R[10]]]],[11,"reunite",R[57],R[62],29,[[["sendhalf"]],[[R[10],[R[52],R[58]]],[R[52]],[R[58]]]]],[11,R[59],E,R[60],29,[[["self"]]]],[11,"recv",E,R[61],29,[[["self"]]]],[11,"reunite",E,R[62],30,[[["recvhalf"]],[[R[10],[R[52],R[58]]],[R[52]],[R[58]]]]],[11,R[66],E,R[53],30,[[[R[39]],["self"]]]],[11,"send",E,R[53],30,[[["self"]]]],[0,"unix",R[36],"Unix domain socket utility types",N,N],[3,R[63],R[71],"Stream of listeners",N,N],[3,R[34],E,"Read half of a `UnixStream`.",N,N],[3,R[35],E,"Write half of a `UnixStream`.",N,N],[3,"UCred",E,"Credentials of a process",N,N],[12,"uid",E,"UID (user ID) of the process",31,N],[12,"gid",E,"GID (group ID) of the process",31,N],[11,"bind",R[36],"Creates a new `UnixDatagram` bound to the specified path.",32,[[["p"]],[[R[10],[R[64]]],[R[64]]]]],[11,"pair",E,R[77],32,[[],[R[10]]]],[11,R[37],E,"Consumes a `UnixDatagram` in the standard library and…",32,[[[R[64]]],[[R[10],[R[64]]],[R[64]]]]],[11,"unbound",E,"Creates a new `UnixDatagram` which is not bound to any…",32,[[],[[R[10],[R[64]]],[R[64]]]]],[11,R[65],E,"Connects the socket to the specified address.",32,[[["asref",["path"]],["self"],["path"]],[R[10]]]],[11,"send",E,"Sends data on the socket to the socket's peer.",32,[[["self"]]]],[11,"recv",E,R[67],32,[[["self"]]]],[11,R[66],E,"Sends data on the socket to the specified address.",32,[[["p"],["self"]]]],[11,R[59],E,R[67],32,[[["self"]]]],[11,R[45],E,R[68],32,[[["self"]],[[R[10],[R[39]]],[R[39]]]]],[11,R[69],E,"Returns the address of this socket's peer.",32,[[["self"]],[[R[10],[R[39]]],[R[39]]]]],[11,R[73],E,R[74],32,[[["self"]],[[R[10],[R[48]]],[R[48],["error"]]]]],[11,R[33],E,R[70],32,[[[R[33]],["self"]],[R[10]]]],[11,R[41],R[71],"Attempts to poll `UnixStream` by polling inner…",33,[[[R[11]],["self"],["pin"]],[[R[10],[R[76]]],["poll",[R[10]]]]]],[11,"bind",R[36],"Creates a new `UnixListener` bound to the specified path.",34,[[["p"]],[[R[72]],[R[10],[R[72]]]]]],[11,R[37],E,"Consumes a `UnixListener` in the standard library and…",34,[[[R[72]]],[[R[72]],[R[10],[R[72]]]]]],[11,R[45],E,"Returns the local socket address of this listener.",34,[[["self"]],[[R[10],[R[39]]],[R[39]]]]],[11,R[73],E,R[74],34,[[["self"]],[[R[10],[R[48]]],[R[48],["error"]]]]],[11,"accept",E,"Accepts a new incoming connection to this listener.",34,[[["self"]]]],[11,R[40],E,R[75],34,[[["self"]],[R[40]]]],[11,R[65],E,"Connects to the socket named by `path`.",35,[[["p"]]]],[11,R[37],E,"Consumes a `UnixStream` in the standard library and…",35,[[[R[76]]],[[R[10],[R[76]]],[R[76]]]]],[11,"pair",E,R[77],35,[[],[R[10]]]],[11,R[45],E,"Returns the socket address of the local half of this…",35,[[["self"]],[[R[10],[R[39]]],[R[39]]]]],[11,R[69],E,"Returns the socket address of the remote half of this…",35,[[["self"]],[[R[10],[R[39]]],[R[39]]]]],[11,"peer_cred",E,"Returns effective credentials of the process which called…",35,[[["self"]],[[R[10],["ucred"]],["ucred"]]]],[11,R[73],E,R[74],35,[[["self"]],[[R[10],[R[48]]],[R[48],["error"]]]]],[11,R[33],E,R[70],35,[[[R[33]],["self"]],[R[10]]]],[11,"split",E,"Split a `UnixStream` into a read half and a write half,…",35,[[["self"]]]],[8,"ToSocketAddrs",E,"Converts or resolves without blocking to one or more…",N,N],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",N,N],[8,R[78],R[88],R[79],N,N],[10,R[80],E,R[81],15,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[10,R[170],E,R[82],15,[[["self"],["usize"],["pin"]]]],[8,R[83],E,R[28],N,N],[11,R[84],R[85],R[86],16,[[["self"]],["bool"]]],[10,R[87],R[88],R[89],16,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[90],R[85],R[29],16,[[["b"],[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[8,R[91],R[88],R[92],N,N],[10,R[93],E,R[94],18,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10],["usize","error"]]]]],[10,R[95],E,R[96],18,[[[R[11]],["self"],["pin"]],[[R[10],["error"]],["poll",[R[10]]]]]],[10,R[97],E,R[98],18,[[[R[11]],["self"],["pin"]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[99],R[85],R[100],18,[[["b"],[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10],["usize","error"]]]]],[0,"process","tokio","An implementation of asynchronous process management for…",N,N],[3,"Command",R[154],"This structure mimics the API of [`std::process::Command`]…",N,N],[3,"Child",E,"Representation of a child process spawned onto an event…",N,N],[12,"stdin",E,"The handle for writing to the child's standard input…",36,N],[12,"stdout",E,"The handle for reading from the child's standard output…",36,N],[12,R[9],E,"The handle for reading from the child's standard error…",36,N],[3,R[273],E,"The standard input stream for spawned children.",N,N],[3,R[274],E,"The standard output stream for spawned children.",N,N],[3,R[275],E,"The standard error stream for spawned children.",N,N],[11,"new",E,"Constructs a new `Command` for launching the program at…",37,[[["osstr"],["asref",["osstr"]]],[R[101]]]],[11,"arg",E,"Adds an argument to pass to the program.",37,[[["osstr"],["self"],["asref",["osstr"]]],[R[101]]]],[11,"args",E,"Adds multiple arguments to pass to the program.",37,[[["self"],["i"]],[R[101]]]],[11,"env",E,"Inserts or updates an environment variable mapping.",37,[[["self"],["k"],["v"]],[R[101]]]],[11,"envs",E,"Adds or updates multiple environment variable mappings.",37,[[["self"],["i"]],[R[101]]]],[11,"env_remove",E,"Removes an environment variable mapping.",37,[[["osstr"],["self"],["asref",["osstr"]]],[R[101]]]],[11,"env_clear",E,"Clears the entire environment map for the child process.",37,[[["self"]],[R[101]]]],[11,"current_dir",E,"Sets the working directory for the child process.",37,[[["self"],["path"],["asref",["path"]]],[R[101]]]],[11,"stdin",E,"Sets configuration for the child process's standard input…",37,[[["stdio"],["self"],["into",["stdio"]]],[R[101]]]],[11,"stdout",E,"Sets configuration for the child process's standard output…",37,[[["stdio"],["self"],["into",["stdio"]]],[R[101]]]],[11,R[9],E,"Sets configuration for the child process's standard error…",37,[[["stdio"],["self"],["into",["stdio"]]],[R[101]]]],[11,"kill_on_drop",E,"Controls whether a `kill` operation should be invoked on a…",37,[[["self"],["bool"]],[R[101]]]],[11,"uid",E,"Sets the child process's user ID. This translates to a…",37,[[["self"],["u32"]],[R[101]]]],[11,"gid",E,"Similar to `uid` but sets the group ID of the child…",37,[[["self"],["u32"]],[R[101]]]],[11,"pre_exec",E,"Schedules a closure to be run just before the `exec`…",37,[[["self"],["f"]],[R[101]]]],[11,"spawn",E,"Executes the command as a child process, returning a…",37,[[["self"]],[[R[10],["child"]],["child"]]]],[11,"status",E,R[102],37,[[["self"]]]],[11,"output",E,R[102],37,[[["self"]]]],[11,"id",E,"Returns the OS-assigned process identifier associated with…",36,[[["self"]],["u32"]]],[11,"kill",E,"Forces the child to exit.",36,[[["self"]],[R[10]]]],[11,"wait_with_output",E,"Returns a future that will resolve to an `Output`,…",36,[[]]],[0,"runtime","tokio",R[103],N,N],[3,R[341],R[156],"Builds Tokio Runtime with custom configuration values.",N,N],[3,"Handle",E,"Handle to the runtime",N,N],[3,R[276],E,"Error returned by `try_current` when no Runtime has been…",N,N],[3,"Runtime",E,R[103],N,N],[11,"new",E,"Returns a new runtime builder initialized with default…",38,[[],[R[340]]]],[11,"enable_all",E,"Enables both I/O and time drivers.",38,[[["self"]],["self"]]],[11,"num_threads",E,"Sets the maximum number of worker threads for the…",38,[[["self"],["usize"]],["self"]]],[11,"core_threads",E,"Sets the core number of worker threads for the `Runtime`'s…",38,[[["self"],["usize"]],["self"]]],[11,"max_threads",E,"Specifies limit for threads, spawned by the Runtime.",38,[[["self"],["usize"]],["self"]]],[11,"thread_name",E,"Sets name of threads spawned by the `Runtime`'s thread pool.",38,[[["self"]],["self"]]],[11,"thread_stack_size",E,"Sets the stack size (in bytes) for worker threads.",38,[[["self"],["usize"]],["self"]]],[11,"on_thread_start",E,"Executes function `f` after each thread is started but…",38,[[["self"],["f"]],["self"]]],[11,"on_thread_stop",E,"Executes function `f` before each thread stops.",38,[[["self"],["f"]],["self"]]],[11,"build",E,"Creates the configured `Runtime`.",38,[[["self"]],[[R[10],["runtime"]],["runtime"]]]],[11,"enable_io",E,"Enables the I/O driver.",38,[[["self"]],["self"]]],[11,"enable_time",E,"Enables the time driver.",38,[[["self"]],["self"]]],[11,"basic_scheduler",E,"Sets runtime to use a simpler scheduler that runs all…",38,[[["self"]],["self"]]],[11,"threaded_scheduler",E,"Sets runtime to use a multi-threaded scheduler for…",38,[[["self"]],["self"]]],[11,"enter",E,R[107],39,[[["self"],["f"]],["r"]]],[11,"current",E,R[104],39,[[],["self"]]],[11,"try_current",E,R[104],39,[[],[[R[10],[R[105]]],[R[105]]]]],[11,"spawn",E,"Spawns a future onto the Tokio runtime.",39,[[["self"],["f"]],[R[106]]]],[11,"new",E,"Create a new runtime instance with default configuration…",40,[[],[R[10]]]],[11,"spawn",E,"Spawn a future onto the Tokio runtime.",40,[[["self"],["f"]],[R[106]]]],[11,R[334],E,"Run a future to completion on the Tokio runtime. This is…",40,[[["self"],["future"]]]],[11,"enter",E,R[107],40,[[["self"],["f"]],["r"]]],[11,"handle",E,"Return a handle to the runtime's spawner.",40,[[["self"]],["handle"]]],[11,"shutdown_timeout",E,"Shutdown the runtime, waiting for at most `duration` for…",40,[[[R[49]]]]],[0,"signal","tokio","Asynchronous signal handling for Tokio",N,N],[5,"ctrl_c","tokio::signal","Completes when a \"ctrl-c\" notification is sent to the…",N,[[]]],[0,"unix",E,"Unix-specific types for signal handling.",N,N],[3,R[264],R[157],"Represents the specific kind of signal to listen for.",N,N],[3,"Signal",E,"A stream of events for receiving a particular type of OS…",N,N],[5,"signal",E,"Creates a new stream which will receive notifications when…",N,[[[R[175]]],[["signal"],[R[10],["signal"]]]]],[11,"from_raw",E,"Allows for listening to any valid OS signal.",41,[[["c_int"]],["self"]]],[11,"alarm",E,"Represents the SIGALRM signal.",41,[[],["self"]]],[11,"child",E,"Represents the SIGCHLD signal.",41,[[],["self"]]],[11,"hangup",E,"Represents the SIGHUP signal.",41,[[],["self"]]],[11,"interrupt",E,"Represents the SIGINT signal.",41,[[],["self"]]],[11,"io",E,"Represents the SIGIO signal.",41,[[],["self"]]],[11,"pipe",E,"Represents the SIGPIPE signal.",41,[[],["self"]]],[11,"quit",E,"Represents the SIGQUIT signal.",41,[[],["self"]]],[11,"terminate",E,"Represents the SIGTERM signal.",41,[[],["self"]]],[11,"user_defined1",E,"Represents the SIGUSR1 signal.",41,[[],["self"]]],[11,"user_defined2",E,"Represents the SIGUSR2 signal.",41,[[],["self"]]],[11,"window_change",E,"Represents the SIGWINCH signal.",41,[[],["self"]]],[11,"recv",E,"Receives the next signal notification event.",42,[[["self"]]]],[11,"poll_recv",E,"Polls to receive the next signal notification event,…",42,[[["self"],[R[11]]],[["poll",[R[48]]],[R[48]]]]],[0,"stream","tokio","Stream utilities for Tokio.",N,N],[8,"Stream",R[158],"A stream of values produced asynchronously.",N,N],[16,"Item",E,"Values yielded by the stream.",43,N],[10,R[183],E,"Attempt to pull out the next value of this stream,…",43,[[[R[11]],["self"],["pin"]],[[R[48]],["poll",[R[48]]]]]],[11,R[184],E,"Returns the bounds on the remaining length of the stream.",43,[[["self"]]]],[3,"Empty",E,"Stream for the [`empty`] function.",N,N],[3,"Iter",E,"Stream for the [`iter`] function.",N,N],[3,"Once",E,"Stream for the [`once`] function.",N,N],[3,"Pending",E,"Stream for the [`pending`] function.",N,N],[5,"empty",E,"Creates a stream that yields nothing.",N,[[],["empty"]]],[5,"iter",E,"Converts an `Iterator` into a `Stream` which is always…",N,[[["i"]],["iter"]]],[5,"once",E,"Creates a stream that emits an element exactly once.",N,[[[T]],["once"]]],[5,"pending",E,"Creates a stream that is never ready",N,[[],["pending"]]],[8,"FromStream",E,"Convert from a `Stream`.",N,N],[8,R[265],E,"An extension trait for `Stream`s that provides a variety…",N,N],[11,"next",E,"Consumes and returns the next value in the stream or…",44,[[["self"]],["next"]]],[11,"try_next",E,"Consumes and returns the next item in the stream. If an…",44,[[["self"]],["trynext"]]],[11,"map",E,"Maps this stream's items to a different type, returning a…",44,[[["f"]],["map"]]],[11,"merge",E,"Combine two streams into one by interleaving the output of…",44,[[[U]],["merge"]]],[11,"filter",E,"Filters the values produced by this stream according to…",44,[[["f"]],["filter"]]],[11,"filter_map",E,"Filters the values produced by this stream while…",44,[[["f"]],["filtermap"]]],[11,"fuse",E,"Creates a stream which ends after the first `None`.",44,[[],["fuse"]]],[11,"take",E,"Creates a new stream of at most `n` items of the…",44,[[["usize"]],["take"]]],[11,"take_while",E,"Take elements from this stream while the provided…",44,[[["f"]],["takewhile"]]],[11,"all",E,"Tests if every element of the stream matches a predicate.",44,[[["self"],["f"]],["allfuture"]]],[11,"any",E,"Tests if any element of the stream matches a predicate.",44,[[["self"],["f"]],["anyfuture"]]],[11,"chain",E,"Combine two streams into one by first returning all values…",44,[[[U]],["chain"]]],[11,"fold",E,"A combinator that applies a function to every element in a…",44,[[["b"],["f"]],["foldfuture"]]],[11,"collect",E,"Drain stream pushing all emitted values into a collection.",44,[[],["collect"]]],[11,"timeout",E,"Applies a per-item timeout to the passed stream.",44,[[[R[49]]],["timeout"]]],[0,"sync","tokio","Synchronization primitives for use in asynchronous contexts.",N,N],[3,"Barrier",R[112],"A barrier enables multiple threads to synchronize the…",N,N],[3,R[266],E,"A `BarrierWaitResult` is returned by `wait` when all…",N,N],[3,"Mutex",E,"An asynchronous mutual exclusion primitive useful for…",N,N],[3,R[277],E,"A handle to a held `Mutex`.",N,N],[3,R[270],E,"Counting semaphore performing asynchronous permit…",N,N],[3,R[271],E,"A permit from the semaphore",N,N],[3,"RwLock",E,"An asynchronous reader-writer lock",N,N],[3,R[278],E,"RAII structure used to release the shared read access of a…",N,N],[3,R[279],E,"RAII structure used to release the exclusive write access…",N,N],[11,"new",E,"Creates a new barrier that can block a given number of…",45,[[["usize"]],["barrier"]]],[11,"wait",E,"Does not resolve until all tasks have rendezvoused here.",45,[[["self"]]]],[11,"is_leader",E,"Returns `true` if this thread from wait is the \"leader…",46,[[["self"]],["bool"]]],[0,R[108],E,"A multi-producer, multi-consumer broadcast queue. Each…",N,N],[3,"Sender",R[159],"Sending-half of the [`broadcast`] channel.",N,N],[3,R[123],E,"Receiving-half of the [`broadcast`] channel.",N,N],[3,R[118],E,"Error returned by [`Sender::send`][Sender::send].",N,N],[12,"0",E,E,47,N],[4,R[119],E,"An error returned from the [`recv`] function on a…",N,N],[13,"Closed",E,R[109],48,N],[13,"Lagged",E,"The receiver lagged too far behind. Attempting to receive…",48,N],[4,R[120],E,"An error returned from the [`try_recv`] function on a…",N,N],[13,"Empty",E,"The channel is currently empty. There are still active…",49,N],[13,"Closed",E,R[109],49,N],[13,"Lagged",E,"The receiver lagged too far behind and has been forcibly…",49,N],[5,"channel",E,"Create a bounded, multi-producer, multi-consumer channel…",N,[[["usize"]]]],[11,"send",E,"Attempts to send a value to all active [`Receiver`]…",50,[[["self"],[T]],[[R[110]],["usize"],[R[10],["usize",R[110]]]]]],[11,"subscribe",E,"Creates a new [`Receiver`] handle that will receive values…",50,[[["self"]],["receiver"]]],[11,"receiver_count",E,"Returns the number of active receivers",50,[[["self"]],["usize"]]],[11,R[116],E,R[114],51,[[["self"]],[[R[111]],[R[10],[R[111]]]]]],[11,"recv",E,R[113],51,[[["self"]]]],[0,"mpsc",R[112],"A multi-producer, single-consumer queue for sending values…",N,N],[3,R[123],R[160],"Receive values from the associated `Sender`.",N,N],[3,"Sender",E,"Send values to the associated `Receiver`.",N,N],[3,R[267],E,"Receive values from the associated `UnboundedSender`.",N,N],[3,R[268],E,"Send values to the associated `UnboundedReceiver`.",N,N],[5,"channel",E,"Creates a bounded mpsc channel for communicating between…",N,[[["usize"]]]],[5,"unbounded_channel",E,"Creates an unbounded mpsc channel for communicating…",N,[[]]],[11,"recv",E,R[113],52,[[["self"]]]],[11,R[116],E,R[114],52,[[["self"]],[[R[111]],[R[10],[R[111]]]]]],[11,"close",E,R[117],52,[[["self"]]]],[11,"try_send",E,"Attempts to immediately send a message on this `Sender`",53,[[["self"],[T]],[[R[10],[R[115]]],[R[115]]]]],[11,"send",E,"Sends a value, waiting until there is capacity.",53,[[[T],["self"]]]],[11,"recv",E,R[113],54,[[["self"]]]],[11,R[116],E,R[114],54,[[["self"]],[[R[111]],[R[10],[R[111]]]]]],[11,"close",E,R[117],54,[[["self"]]]],[11,"send",E,"Attempts to send a message on this `UnboundedSender`…",55,[[["self"],[T]],[[R[10],[R[110]]],[R[110]]]]],[0,"error",E,"Channel error types",N,N],[3,R[118],R[161],"Error returned by the `Sender`.",N,N],[12,"0",E,E,56,N],[3,R[119],E,"Error returned by `Receiver`.",N,N],[3,R[280],E,"Erorr returned by `Sender::poll_ready`].",N,N],[4,R[269],E,"This enumeration is the list of the possible error…",N,N],[13,"Full",E,"The data could not be sent on the channel because the…",57,N],[13,"Closed",E,"The receive half of the channel was explicitly closed or…",57,N],[4,R[120],E,"This enumeration is the list of the possible reasons that…",N,N],[13,"Empty",E,"This channel is currently empty, but the Sender(s) have…",58,N],[13,"Closed",E,"The channel's sending half has been closed, and there will…",58,N],[11,"new",R[112],"Creates a new lock in an unlocked state ready for use.",59,[[[T]],["self"]]],[11,"lock",E,"A future that resolves on acquiring the lock and returns…",59,[[["self"]]]],[11,"try_lock",E,"Tries to acquire the lock",59,[[["self"]],[[R[10],[R[121],R[122]]],[R[121]],[R[122]]]]],[0,"oneshot",E,"A channel for sending a single message between…",N,N],[3,"Sender",R[124],"Sends a value to the associated `Receiver`.",N,N],[3,R[123],E,"Receive a value from the associated `Sender`.",N,N],[5,"channel",E,"Create a new one-shot channel for sending single values…",N,[[]]],[0,"error",E,"Oneshot error types",N,N],[3,R[119],R[162],"Error returned by the `Future` implementation for…",N,N],[4,R[120],E,"Error returned by the `try_recv` function on `Receiver`.",N,N],[13,"Empty",E,"The send half of the channel has not yet sent a value.",60,N],[13,"Closed",E,"The send half of the channel was dropped without sending a…",60,N],[11,"send",R[124],"Attempts to send a value on this channel, returning it…",61,[[[T]],[R[10]]]],[11,"closed",E,"Waits for the associated [`Receiver`] handle to close.",61,[[["self"]]]],[11,"is_closed",E,"Returns `true` if the associated [`Receiver`] handle has…",61,[[["self"]],["bool"]]],[11,"close",E,"Prevents the associated [`Sender`] handle from sending a…",62,[[["self"]]]],[11,R[116],E,"Attempts to receive a value.",62,[[["self"]],[[R[111]],[R[10],[R[111]]]]]],[11,"new",R[112],"Creates a new semaphore with the initial number of permits",63,[[["usize"]],["self"]]],[11,"available_permits",E,"Returns the current number of available permits",63,[[["self"]],["usize"]]],[11,"add_permits",E,"Adds `n` new permits to the semaphore.",63,[[["self"],["usize"]]]],[11,"acquire",E,"Acquires permit from the semaphore",63,[[["self"]]]],[11,"try_acquire",E,"Tries to acquire a permit form the semaphore",63,[[["self"]],[[R[126]],[R[125]],[R[10],[R[125],R[126]]]]]],[11,"forget",E,"Forgets the permit without releasing it back to the…",64,[[]]],[11,"new",E,"Creates a new instance of an `RwLock<T>` which is unlocked.",65,[[[T]],["rwlock"]]],[11,"read",E,"Locks this rwlock with shared read access, blocking the…",65,[[["self"]]]],[11,"write",E,"Locks this rwlock with exclusive write access, blocking…",65,[[["self"]]]],[0,"watch",E,"A single-producer, multi-consumer channel that only…",N,N],[3,R[123],R[127],"Receives values from the associated `Sender`.",N,N],[3,"Sender",E,"Sends values to the associated `Receiver`.",N,N],[3,"Ref",E,"Returns a reference to the inner value",N,N],[5,"channel",E,"Creates a new watch channel, returning the \"send\" and…",N,[[["clone"]]]],[0,"error",E,"Watch error types",N,N],[3,R[118],R[163],"Error produced when sending a value fails.",N,N],[11,"borrow",R[127],"Returns a reference to the most recently sent value",66,[[["self"]],["ref"]]],[11,"recv",E,"Attempts to clone the latest value sent via the channel.",66,[[["self"]]]],[11,R[108],E,"Broadcasts a new value via the channel, notifying all…",67,[[["self"],[T]],[[R[10],[R[110]]],[R[110]]]]],[11,"closed",E,"Completes when all receivers have dropped.",67,[[["self"]]]],[0,"task","tokio","Asynchronous green-threads.",N,N],[3,R[272],R[164],"Task failed to execute to completion.",N,N],[3,R[281],E,"An owned permission to join on a task (await its…",N,N],[3,"LocalSet",E,"A set of tasks which are executed on the same thread.",N,N],[3,"LocalKey",E,"A key for task-local data.",N,N],[5,"spawn_blocking",E,"Runs the provided closure on a thread where blocking is…",N,[[["f"]],[R[106]]]],[5,"block_in_place",E,"Runs the provided blocking function without blocking the…",N,[[["f"]],["r"]]],[5,"spawn",E,R[128],N,[[[T]],[R[106]]]],[5,"yield_now",E,"Yields execution back to the Tokio runtime.",N,[[]]],[5,R[131],E,"Spawns a `!Send` future on the local task set.",N,[[["f"]],[R[106]]]],[11,"is_cancelled",E,"Returns true if the error was caused by the task being…",68,[[["self"]],["bool"]]],[11,"is_panic",E,"Returns true if the error was caused by the task panicking",68,[[["self"]],["bool"]]],[11,"into_panic",E,R[129],68,[[],[["any"],["box",["any"]]]]],[11,"try_into_panic",E,R[129],68,[[],[[R[10],["box",R[130]]],["box",["any"]],[R[130]]]]],[11,"new",E,"Returns a new local task set.",69,[[],["self"]]],[11,R[131],E,"Spawns a `!Send` task onto the local task set.",69,[[["self"],["f"]],[R[106]]]],[11,R[334],E,"Runs a future to completion on the provided runtime,…",69,[[["f"],["self"],["runtime"]]]],[11,"run_until",E,"Run a future to completion on the local set, returning its…",69,[[["self"],["f"]]]],[11,"scope",E,"Sets a value `T` as the task-local value for the future `F`.",70,[[["self"],[T],["f"]]]],[11,"with",E,R[132],70,[[["self"],["f"]],["r"]]],[11,"try_with",E,R[132],70,[[["self"],["f"]],[[R[10],[R[133]]],[R[133]]]]],[11,"get",E,"Returns a copy of the task-local value if the task-local…",70,[[["self"]],[T]]],[0,"time","tokio","Utilities for tracking time.",N,N],[3,"Duration",R[141],"A `Duration` type to represent a span of time, typically…",N,N],[3,R[138],E,R[137],N,N],[3,"Delay",E,"Future returned by `delay_until` and `delay_for`.",N,N],[3,"Error",E,"Errors encountered by the timer implementation.",N,N],[3,"Instant",E,"A measurement of the system clock, useful for talking to…",N,N],[3,"Interval",E,"Stream returned by `interval` and `interval_at`.",N,N],[3,"Elapsed",E,"Error returned by `Timeout`.",N,N],[3,"Timeout",E,"Future returned by `timeout` and `timeout_at`.",N,N],[3,"Throttle",E,"Stream for the `throttle` function.",N,N],[5,"advance",E,"Advance time",N,[[[R[49]]]]],[5,"pause",E,"Pause time",N,[[]]],[5,"resume",E,"Resume time",N,[[]]],[5,"delay_for",E,"Waits until `duration` has elapsed.",N,[[[R[49]]],["delay"]]],[5,"delay_until",E,"Waits until `deadline` is reached.",N,[[[R[142]]],["delay"]]],[5,R[135],E,R[134],N,[[[R[49]]],[R[135]]]],[5,"interval_at",E,R[134],N,[[[R[142]],[R[49]]],[R[135]]]],[5,"timeout",E,R[136],N,[[[T],[R[49]]],["timeout"]]],[5,"timeout_at",E,R[136],N,[[[R[142]],[T]],["timeout"]]],[5,"throttle",E,"Slows down a stream by enforcing a delay between items.…",N,[[[T],[R[49]]],["throttle"]]],[0,"delay_queue",E,R[137],N,N],[3,R[138],R[165],R[137],N,N],[3,"Expired",E,"An entry in `DelayQueue` that has expired and removed.",N,N],[3,"Key",E,"Token to a value stored in a `DelayQueue`.",N,N],[11,"new",E,"Creates a new, empty, `DelayQueue`",71,[[],[R[139]]]],[11,R[18],E,"Creates a new, empty, `DelayQueue` with the specified…",71,[[["usize"]],[R[139]]]],[11,"insert_at",E,"Inserts `value` into the queue set to expire at a specific…",71,[[["self"],[T],[R[142]]],["key"]]],[11,"poll_expired",E,"Attempts to pull out the next value of the delay queue,…",71,[[["self"],[R[11]]],[[R[48],[R[10]]],["poll",[R[48]]]]]],[11,"insert",E,"Inserts `value` into the queue set to expire after the…",71,[[["self"],[T],[R[49]]],["key"]]],[11,"remove",E,"Removes the item associated with `key` from the queue.",71,[[["self"],["key"]],["expired"]]],[11,"reset_at",E,R[140],71,[[["self"],["key"],[R[142]]]]],[11,"reset",E,R[140],71,[[["self"],["key"],[R[49]]]]],[11,"clear",E,"Clears the queue, removing all items.",71,[[["self"]]]],[11,"capacity",E,"Returns the number of elements the queue can hold without…",71,[[["self"]],["usize"]]],[11,"len",E,"Returns the number of elements currently in the queue.",71,[[["self"]],["usize"]]],[11,"reserve",E,"Reserves capacity for at least `additional` more items to…",71,[[["self"],["usize"]]]],[11,"is_empty",E,"Returns `true` if there are no items in the queue.",71,[[["self"]],["bool"]]],[11,R[20],E,"Returns a reference to the inner value.",72,[[["self"]],[T]]],[11,R[21],E,"Returns a mutable reference to the inner value.",72,[[["self"]],[T]]],[11,R[17],E,"Consumes `self` and returns the inner value.",72,[[],[T]]],[11,"deadline",R[141],"Returns the instant at which the future will complete.",73,[[["self"]],[R[142]]]],[11,"is_elapsed",E,"Returns `true` if the `Delay` has elapsed",73,[[["self"]],["bool"]]],[11,"reset",E,"Resets the `Delay` instance to a new deadline.",73,[[["self"],[R[142]]]]],[11,R[33],E,"Creates an error representing a shutdown timer.",74,[[],["error"]]],[11,"is_shutdown",E,R[143],74,[[["self"]],["bool"]]],[11,"at_capacity",E,"Creates an error representing a timer at capacity.",74,[[],["error"]]],[11,"is_at_capacity",E,R[143],74,[[["self"]],["bool"]]],[11,"now",E,"Returns an instant corresponding to \"now\".",75,[[],[R[142]]]],[11,R[37],E,"Create a `tokio::time::Instant` from a `std::time::Instant`.",75,[[[R[142]]],[R[142]]]],[11,"into_std",E,"Convert the value into a `std::time::Instant`.",75,[[],[R[142]]]],[11,"duration_since",E,R[144],75,[[[R[142]],["self"]],[R[49]]]],[11,"checked_duration_since",E,R[144],75,[[[R[142]],["self"]],[[R[49]],[R[48],[R[49]]]]]],[11,"saturating_duration_since",E,R[144],75,[[[R[142]],["self"]],[R[49]]]],[11,"elapsed",E,"Returns the amount of time elapsed since this instant was…",75,[[["self"]],[R[49]]]],[11,R[242],E,"Returns `Some(t)` where `t` is the time `self + duration`…",75,[[["self"],[R[49]]],[[R[48],[R[142]]],[R[142]]]]],[11,R[243],E,"Returns `Some(t)` where `t` is the time `self - duration`…",75,[[["self"],[R[49]]],[[R[48],[R[142]]],[R[142]]]]],[11,"tick",E,"Completes when the next instant in the interval has been…",76,[[["self"]]]],[11,R[20],E,"Gets a reference to the underlying value in this timeout.",77,[[["self"]],[T]]],[11,R[21],E,"Gets a mutable reference to the underlying value in this…",77,[[["self"]],[T]]],[11,R[17],E,"Consumes this timeout, returning the underlying value.",77,[[],[T]]],[11,R[20],E,"Acquires a reference to the underlying stream that this…",78,[[["self"]],[T]]],[11,R[21],E,"Acquires a mutable reference to the underlying stream that…",78,[[["self"]],[T]]],[11,R[17],E,"Consumes this combinator, returning the underlying stream.",78,[[],[T]]],[14,"pin","tokio","Pins a value on the stack.",N,N],[14,"select",E,"Wait on multiple concurrent branches, returning when the…",N,N],[14,"join",E,R[145],N,N],[14,"try_join",E,R[145],N,N],[14,"task_local",E,"Declares a new task-local key of type…",N,N],[11,"into",R[7],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[147],E,E,0,[[[U]],[R[10]]]],[11,R[148],E,E,0,[[],[R[10]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[146],E,E,0,[[["self"]],[T]]],[11,R[150],E,E,0,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[153],E,E,1,[[["self"]],[T]]],[11,R[149],E,E,1,[[["self"],[T]]]],[11,R[147],E,E,1,[[[U]],[R[10]]]],[11,R[148],E,E,1,[[],[R[10]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[146],E,E,1,[[["self"]],[T]]],[11,R[150],E,E,1,[[["self"]],["typeid"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[147],E,E,3,[[[U]],[R[10]]]],[11,R[148],E,E,3,[[],[R[10]]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[146],E,E,3,[[["self"]],[T]]],[11,R[150],E,E,3,[[["self"]],["typeid"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[147],E,E,2,[[[U]],[R[10]]]],[11,R[148],E,E,2,[[],[R[10]]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[146],E,E,2,[[["self"]],[T]]],[11,R[150],E,E,2,[[["self"]],["typeid"]]],[11,R[151],E,E,2,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",R[85],E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[152],E,E,79,[[["self"]],["string"]]],[11,R[147],E,E,79,[[[U]],[R[10]]]],[11,R[148],E,E,79,[[],[R[10]]]],[11,"borrow",E,E,79,[[["self"]],[T]]],[11,R[146],E,E,79,[[["self"]],[T]]],[11,R[150],E,E,79,[[["self"]],["typeid"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[153],E,E,4,[[["self"]],[T]]],[11,R[149],E,E,4,[[["self"],[T]]]],[11,R[147],E,E,4,[[[U]],[R[10]]]],[11,R[148],E,E,4,[[],[R[10]]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[146],E,E,4,[[["self"]],[T]]],[11,R[150],E,E,4,[[["self"]],["typeid"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[147],E,E,5,[[[U]],[R[10]]]],[11,R[148],E,E,5,[[],[R[10]]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[146],E,E,5,[[["self"]],[T]]],[11,R[150],E,E,5,[[["self"]],["typeid"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[147],E,E,6,[[[U]],[R[10]]]],[11,R[148],E,E,6,[[],[R[10]]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[146],E,E,6,[[["self"]],[T]]],[11,R[150],E,E,6,[[["self"]],["typeid"]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[147],E,E,80,[[[U]],[R[10]]]],[11,R[148],E,E,80,[[],[R[10]]]],[11,"borrow",E,E,80,[[["self"]],[T]]],[11,R[146],E,E,80,[[["self"]],[T]]],[11,R[150],E,E,80,[[["self"]],["typeid"]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[147],E,E,81,[[[U]],[R[10]]]],[11,R[148],E,E,81,[[],[R[10]]]],[11,"borrow",E,E,81,[[["self"]],[T]]],[11,R[146],E,E,81,[[["self"]],[T]]],[11,R[150],E,E,81,[[["self"]],["typeid"]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[147],E,E,82,[[[U]],[R[10]]]],[11,R[148],E,E,82,[[],[R[10]]]],[11,"borrow",E,E,82,[[["self"]],[T]]],[11,R[146],E,E,82,[[["self"]],[T]]],[11,R[150],E,E,82,[[["self"]],["typeid"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[147],E,E,7,[[[U]],[R[10]]]],[11,R[148],E,E,7,[[],[R[10]]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[146],E,E,7,[[["self"]],[T]]],[11,R[150],E,E,7,[[["self"]],["typeid"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[147],E,E,8,[[[U]],[R[10]]]],[11,R[148],E,E,8,[[],[R[10]]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[146],E,E,8,[[["self"]],[T]]],[11,R[150],E,E,8,[[["self"]],["typeid"]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[147],E,E,83,[[[U]],[R[10]]]],[11,R[148],E,E,83,[[],[R[10]]]],[11,"borrow",E,E,83,[[["self"]],[T]]],[11,R[146],E,E,83,[[["self"]],[T]]],[11,R[150],E,E,83,[[["self"]],["typeid"]]],[11,R[155],E,E,83,[[["pin"],["f"],[R[11]]],["poll"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[147],E,E,9,[[[U]],[R[10]]]],[11,R[148],E,E,9,[[],[R[10]]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[146],E,E,9,[[["self"]],[T]]],[11,R[150],E,E,9,[[["self"]],["typeid"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[147],E,E,10,[[[U]],[R[10]]]],[11,R[148],E,E,10,[[],[R[10]]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[146],E,E,10,[[["self"]],[T]]],[11,R[150],E,E,10,[[["self"]],["typeid"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[147],E,E,11,[[[U]],[R[10]]]],[11,R[148],E,E,11,[[],[R[10]]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[146],E,E,11,[[["self"]],[T]]],[11,R[150],E,E,11,[[["self"]],["typeid"]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[147],E,E,84,[[[U]],[R[10]]]],[11,R[148],E,E,84,[[],[R[10]]]],[11,"borrow",E,E,84,[[["self"]],[T]]],[11,R[146],E,E,84,[[["self"]],[T]]],[11,R[150],E,E,84,[[["self"]],["typeid"]]],[11,R[155],E,E,84,[[["pin"],["f"],[R[11]]],["poll"]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[147],E,E,85,[[[U]],[R[10]]]],[11,R[148],E,E,85,[[],[R[10]]]],[11,"borrow",E,E,85,[[["self"]],[T]]],[11,R[146],E,E,85,[[["self"]],[T]]],[11,R[150],E,E,85,[[["self"]],["typeid"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[147],E,E,12,[[[U]],[R[10]]]],[11,R[148],E,E,12,[[],[R[10]]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[146],E,E,12,[[["self"]],[T]]],[11,R[150],E,E,12,[[["self"]],["typeid"]]],[11,R[151],E,E,12,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[147],E,E,86,[[[U]],[R[10]]]],[11,R[148],E,E,86,[[],[R[10]]]],[11,"borrow",E,E,86,[[["self"]],[T]]],[11,R[146],E,E,86,[[["self"]],[T]]],[11,R[150],E,E,86,[[["self"]],["typeid"]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[147],E,E,87,[[[U]],[R[10]]]],[11,R[148],E,E,87,[[],[R[10]]]],[11,"borrow",E,E,87,[[["self"]],[T]]],[11,R[146],E,E,87,[[["self"]],[T]]],[11,R[150],E,E,87,[[["self"]],["typeid"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[147],E,E,13,[[[U]],[R[10]]]],[11,R[148],E,E,13,[[],[R[10]]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[146],E,E,13,[[["self"]],[T]]],[11,R[150],E,E,13,[[["self"]],["typeid"]]],[11,R[151],E,E,13,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[147],E,E,14,[[[U]],[R[10]]]],[11,R[148],E,E,14,[[],[R[10]]]],[11,"borrow",E,E,14,[[["self"]],[T]]],[11,R[146],E,E,14,[[["self"]],[T]]],[11,R[150],E,E,14,[[["self"]],["typeid"]]],[11,"into",R[36],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[147],E,E,23,[[[U]],[R[10]]]],[11,R[148],E,E,23,[[],[R[10]]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[146],E,E,23,[[["self"]],[T]]],[11,R[150],E,E,23,[[["self"]],["typeid"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[147],E,E,26,[[[U]],[R[10]]]],[11,R[148],E,E,26,[[],[R[10]]]],[11,"borrow",E,E,26,[[["self"]],[T]]],[11,R[146],E,E,26,[[["self"]],[T]]],[11,R[150],E,E,26,[[["self"]],["typeid"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[147],E,E,28,[[[U]],[R[10]]]],[11,R[148],E,E,28,[[],[R[10]]]],[11,"borrow",E,E,28,[[["self"]],[T]]],[11,R[146],E,E,28,[[["self"]],[T]]],[11,R[150],E,E,28,[[["self"]],["typeid"]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[147],E,E,32,[[[U]],[R[10]]]],[11,R[148],E,E,32,[[],[R[10]]]],[11,"borrow",E,E,32,[[["self"]],[T]]],[11,R[146],E,E,32,[[["self"]],[T]]],[11,R[150],E,E,32,[[["self"]],["typeid"]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[147],E,E,34,[[[U]],[R[10]]]],[11,R[148],E,E,34,[[],[R[10]]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[146],E,E,34,[[["self"]],[T]]],[11,R[150],E,E,34,[[["self"]],["typeid"]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[147],E,E,35,[[[U]],[R[10]]]],[11,R[148],E,E,35,[[],[R[10]]]],[11,"borrow",E,E,35,[[["self"]],[T]]],[11,R[146],E,E,35,[[["self"]],[T]]],[11,R[150],E,E,35,[[["self"]],["typeid"]]],[11,"into",R[42],E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[147],E,E,24,[[[U]],[R[10]]]],[11,R[148],E,E,24,[[],[R[10]]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[146],E,E,24,[[["self"]],[T]]],[11,R[150],E,E,24,[[["self"]],["typeid"]]],[11,R[151],E,E,24,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[147],E,E,25,[[[U]],[R[10]]]],[11,R[148],E,E,25,[[],[R[10]]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[146],E,E,25,[[["self"]],[T]]],[11,R[150],E,E,25,[[["self"]],["typeid"]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[147],E,E,88,[[[U]],[R[10]]]],[11,R[148],E,E,88,[[],[R[10]]]],[11,"borrow",E,E,88,[[["self"]],[T]]],[11,R[146],E,E,88,[[["self"]],[T]]],[11,R[150],E,E,88,[[["self"]],["typeid"]]],[11,"into",R[57],E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[147],E,E,29,[[[U]],[R[10]]]],[11,R[148],E,E,29,[[],[R[10]]]],[11,"borrow",E,E,29,[[["self"]],[T]]],[11,R[146],E,E,29,[[["self"]],[T]]],[11,R[150],E,E,29,[[["self"]],["typeid"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[152],E,E,27,[[["self"]],["string"]]],[11,R[147],E,E,27,[[[U]],[R[10]]]],[11,R[148],E,E,27,[[],[R[10]]]],[11,"borrow",E,E,27,[[["self"]],[T]]],[11,R[146],E,E,27,[[["self"]],[T]]],[11,R[150],E,E,27,[[["self"]],["typeid"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[147],E,E,30,[[[U]],[R[10]]]],[11,R[148],E,E,30,[[],[R[10]]]],[11,"borrow",E,E,30,[[["self"]],[T]]],[11,R[146],E,E,30,[[["self"]],[T]]],[11,R[150],E,E,30,[[["self"]],["typeid"]]],[11,"into",R[71],E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[147],E,E,33,[[[U]],[R[10]]]],[11,R[148],E,E,33,[[],[R[10]]]],[11,"borrow",E,E,33,[[["self"]],[T]]],[11,R[146],E,E,33,[[["self"]],[T]]],[11,R[150],E,E,33,[[["self"]],["typeid"]]],[11,R[151],E,E,33,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[147],E,E,89,[[[U]],[R[10]]]],[11,R[148],E,E,89,[[],[R[10]]]],[11,"borrow",E,E,89,[[["self"]],[T]]],[11,R[146],E,E,89,[[["self"]],[T]]],[11,R[150],E,E,89,[[["self"]],["typeid"]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[147],E,E,90,[[[U]],[R[10]]]],[11,R[148],E,E,90,[[],[R[10]]]],[11,"borrow",E,E,90,[[["self"]],[T]]],[11,R[146],E,E,90,[[["self"]],[T]]],[11,R[150],E,E,90,[[["self"]],["typeid"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[153],E,E,31,[[["self"]],[T]]],[11,R[149],E,E,31,[[["self"],[T]]]],[11,R[147],E,E,31,[[[U]],[R[10]]]],[11,R[148],E,E,31,[[],[R[10]]]],[11,"borrow",E,E,31,[[["self"]],[T]]],[11,R[146],E,E,31,[[["self"]],[T]]],[11,R[150],E,E,31,[[["self"]],["typeid"]]],[11,"into",R[154],E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[147],E,E,37,[[[U]],[R[10]]]],[11,R[148],E,E,37,[[],[R[10]]]],[11,"borrow",E,E,37,[[["self"]],[T]]],[11,R[146],E,E,37,[[["self"]],[T]]],[11,R[150],E,E,37,[[["self"]],["typeid"]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[147],E,E,36,[[[U]],[R[10]]]],[11,R[148],E,E,36,[[],[R[10]]]],[11,"borrow",E,E,36,[[["self"]],[T]]],[11,R[146],E,E,36,[[["self"]],[T]]],[11,R[150],E,E,36,[[["self"]],["typeid"]]],[11,R[155],E,E,36,[[["pin"],["f"],[R[11]]],["poll"]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[147],E,E,91,[[[U]],[R[10]]]],[11,R[148],E,E,91,[[],[R[10]]]],[11,"borrow",E,E,91,[[["self"]],[T]]],[11,R[146],E,E,91,[[["self"]],[T]]],[11,R[150],E,E,91,[[["self"]],["typeid"]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[147],E,E,92,[[[U]],[R[10]]]],[11,R[148],E,E,92,[[],[R[10]]]],[11,"borrow",E,E,92,[[["self"]],[T]]],[11,R[146],E,E,92,[[["self"]],[T]]],[11,R[150],E,E,92,[[["self"]],["typeid"]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[147],E,E,93,[[[U]],[R[10]]]],[11,R[148],E,E,93,[[],[R[10]]]],[11,"borrow",E,E,93,[[["self"]],[T]]],[11,R[146],E,E,93,[[["self"]],[T]]],[11,R[150],E,E,93,[[["self"]],["typeid"]]],[11,"into",R[156],E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[147],E,E,38,[[[U]],[R[10]]]],[11,R[148],E,E,38,[[],[R[10]]]],[11,"borrow",E,E,38,[[["self"]],[T]]],[11,R[146],E,E,38,[[["self"]],[T]]],[11,R[150],E,E,38,[[["self"]],["typeid"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[153],E,E,39,[[["self"]],[T]]],[11,R[149],E,E,39,[[["self"],[T]]]],[11,R[147],E,E,39,[[[U]],[R[10]]]],[11,R[148],E,E,39,[[],[R[10]]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[146],E,E,39,[[["self"]],[T]]],[11,R[150],E,E,39,[[["self"]],["typeid"]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[152],E,E,94,[[["self"]],["string"]]],[11,R[147],E,E,94,[[[U]],[R[10]]]],[11,R[148],E,E,94,[[],[R[10]]]],[11,"borrow",E,E,94,[[["self"]],[T]]],[11,R[146],E,E,94,[[["self"]],[T]]],[11,R[150],E,E,94,[[["self"]],["typeid"]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[147],E,E,40,[[[U]],[R[10]]]],[11,R[148],E,E,40,[[],[R[10]]]],[11,"borrow",E,E,40,[[["self"]],[T]]],[11,R[146],E,E,40,[[["self"]],[T]]],[11,R[150],E,E,40,[[["self"]],["typeid"]]],[11,"into",R[157],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[153],E,E,41,[[["self"]],[T]]],[11,R[149],E,E,41,[[["self"],[T]]]],[11,R[147],E,E,41,[[[U]],[R[10]]]],[11,R[148],E,E,41,[[],[R[10]]]],[11,"borrow",E,E,41,[[["self"]],[T]]],[11,R[146],E,E,41,[[["self"]],[T]]],[11,R[150],E,E,41,[[["self"]],["typeid"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[147],E,E,42,[[[U]],[R[10]]]],[11,R[148],E,E,42,[[],[R[10]]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[146],E,E,42,[[["self"]],[T]]],[11,R[150],E,E,42,[[["self"]],["typeid"]]],[11,"into",R[158],E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[147],E,E,95,[[[U]],[R[10]]]],[11,R[148],E,E,95,[[],[R[10]]]],[11,"borrow",E,E,95,[[["self"]],[T]]],[11,R[146],E,E,95,[[["self"]],[T]]],[11,R[150],E,E,95,[[["self"]],["typeid"]]],[11,R[151],E,E,95,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[147],E,E,96,[[[U]],[R[10]]]],[11,R[148],E,E,96,[[],[R[10]]]],[11,"borrow",E,E,96,[[["self"]],[T]]],[11,R[146],E,E,96,[[["self"]],[T]]],[11,R[150],E,E,96,[[["self"]],["typeid"]]],[11,R[151],E,E,96,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[147],E,E,97,[[[U]],[R[10]]]],[11,R[148],E,E,97,[[],[R[10]]]],[11,"borrow",E,E,97,[[["self"]],[T]]],[11,R[146],E,E,97,[[["self"]],[T]]],[11,R[150],E,E,97,[[["self"]],["typeid"]]],[11,R[151],E,E,97,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[147],E,E,98,[[[U]],[R[10]]]],[11,R[148],E,E,98,[[],[R[10]]]],[11,"borrow",E,E,98,[[["self"]],[T]]],[11,R[146],E,E,98,[[["self"]],[T]]],[11,R[150],E,E,98,[[["self"]],["typeid"]]],[11,R[151],E,E,98,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",R[112],E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[147],E,E,45,[[[U]],[R[10]]]],[11,R[148],E,E,45,[[],[R[10]]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[146],E,E,45,[[["self"]],[T]]],[11,R[150],E,E,45,[[["self"]],["typeid"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[153],E,E,46,[[["self"]],[T]]],[11,R[149],E,E,46,[[["self"],[T]]]],[11,R[147],E,E,46,[[[U]],[R[10]]]],[11,R[148],E,E,46,[[],[R[10]]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[146],E,E,46,[[["self"]],[T]]],[11,R[150],E,E,46,[[["self"]],["typeid"]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[],[T]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[147],E,E,59,[[[U]],[R[10]]]],[11,R[148],E,E,59,[[],[R[10]]]],[11,"borrow",E,E,59,[[["self"]],[T]]],[11,R[146],E,E,59,[[["self"]],[T]]],[11,R[150],E,E,59,[[["self"]],["typeid"]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[152],E,E,99,[[["self"]],["string"]]],[11,R[147],E,E,99,[[[U]],[R[10]]]],[11,R[148],E,E,99,[[],[R[10]]]],[11,"borrow",E,E,99,[[["self"]],[T]]],[11,R[146],E,E,99,[[["self"]],[T]]],[11,R[150],E,E,99,[[["self"]],["typeid"]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[147],E,E,63,[[[U]],[R[10]]]],[11,R[148],E,E,63,[[],[R[10]]]],[11,"borrow",E,E,63,[[["self"]],[T]]],[11,R[146],E,E,63,[[["self"]],[T]]],[11,R[150],E,E,63,[[["self"]],["typeid"]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[147],E,E,64,[[[U]],[R[10]]]],[11,R[148],E,E,64,[[],[R[10]]]],[11,"borrow",E,E,64,[[["self"]],[T]]],[11,R[146],E,E,64,[[["self"]],[T]]],[11,R[150],E,E,64,[[["self"]],["typeid"]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[],[T]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[147],E,E,65,[[[U]],[R[10]]]],[11,R[148],E,E,65,[[],[R[10]]]],[11,"borrow",E,E,65,[[["self"]],[T]]],[11,R[146],E,E,65,[[["self"]],[T]]],[11,R[150],E,E,65,[[["self"]],["typeid"]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[147],E,E,100,[[[U]],[R[10]]]],[11,R[148],E,E,100,[[],[R[10]]]],[11,"borrow",E,E,100,[[["self"]],[T]]],[11,R[146],E,E,100,[[["self"]],[T]]],[11,R[150],E,E,100,[[["self"]],["typeid"]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[147],E,E,101,[[[U]],[R[10]]]],[11,R[148],E,E,101,[[],[R[10]]]],[11,"borrow",E,E,101,[[["self"]],[T]]],[11,R[146],E,E,101,[[["self"]],[T]]],[11,R[150],E,E,101,[[["self"]],["typeid"]]],[11,"into",R[159],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[153],E,E,50,[[["self"]],[T]]],[11,R[149],E,E,50,[[["self"],[T]]]],[11,R[147],E,E,50,[[[U]],[R[10]]]],[11,R[148],E,E,50,[[],[R[10]]]],[11,"borrow",E,E,50,[[["self"]],[T]]],[11,R[146],E,E,50,[[["self"]],[T]]],[11,R[150],E,E,50,[[["self"]],["typeid"]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[147],E,E,51,[[[U]],[R[10]]]],[11,R[148],E,E,51,[[],[R[10]]]],[11,"borrow",E,E,51,[[["self"]],[T]]],[11,R[146],E,E,51,[[["self"]],[T]]],[11,R[150],E,E,51,[[["self"]],["typeid"]]],[11,R[151],E,E,51,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[147],E,E,47,[[[U]],[R[10]]]],[11,R[148],E,E,47,[[],[R[10]]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[146],E,E,47,[[["self"]],[T]]],[11,R[150],E,E,47,[[["self"]],["typeid"]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[152],E,E,48,[[["self"]],["string"]]],[11,R[147],E,E,48,[[[U]],[R[10]]]],[11,R[148],E,E,48,[[],[R[10]]]],[11,"borrow",E,E,48,[[["self"]],[T]]],[11,R[146],E,E,48,[[["self"]],[T]]],[11,R[150],E,E,48,[[["self"]],["typeid"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[152],E,E,49,[[["self"]],["string"]]],[11,R[147],E,E,49,[[[U]],[R[10]]]],[11,R[148],E,E,49,[[],[R[10]]]],[11,"borrow",E,E,49,[[["self"]],[T]]],[11,R[146],E,E,49,[[["self"]],[T]]],[11,R[150],E,E,49,[[["self"]],["typeid"]]],[11,"into",R[160],E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[147],E,E,52,[[[U]],[R[10]]]],[11,R[148],E,E,52,[[],[R[10]]]],[11,"borrow",E,E,52,[[["self"]],[T]]],[11,R[146],E,E,52,[[["self"]],[T]]],[11,R[150],E,E,52,[[["self"]],["typeid"]]],[11,R[151],E,E,52,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[153],E,E,53,[[["self"]],[T]]],[11,R[149],E,E,53,[[["self"],[T]]]],[11,R[147],E,E,53,[[[U]],[R[10]]]],[11,R[148],E,E,53,[[],[R[10]]]],[11,"borrow",E,E,53,[[["self"]],[T]]],[11,R[146],E,E,53,[[["self"]],[T]]],[11,R[150],E,E,53,[[["self"]],["typeid"]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[147],E,E,54,[[[U]],[R[10]]]],[11,R[148],E,E,54,[[],[R[10]]]],[11,"borrow",E,E,54,[[["self"]],[T]]],[11,R[146],E,E,54,[[["self"]],[T]]],[11,R[150],E,E,54,[[["self"]],["typeid"]]],[11,R[151],E,E,54,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[153],E,E,55,[[["self"]],[T]]],[11,R[149],E,E,55,[[["self"],[T]]]],[11,R[147],E,E,55,[[[U]],[R[10]]]],[11,R[148],E,E,55,[[],[R[10]]]],[11,"borrow",E,E,55,[[["self"]],[T]]],[11,R[146],E,E,55,[[["self"]],[T]]],[11,R[150],E,E,55,[[["self"]],["typeid"]]],[11,"into",R[161],E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[152],E,E,56,[[["self"]],["string"]]],[11,R[147],E,E,56,[[[U]],[R[10]]]],[11,R[148],E,E,56,[[],[R[10]]]],[11,"borrow",E,E,56,[[["self"]],[T]]],[11,R[146],E,E,56,[[["self"]],[T]]],[11,R[150],E,E,56,[[["self"]],["typeid"]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[152],E,E,102,[[["self"]],["string"]]],[11,R[147],E,E,102,[[[U]],[R[10]]]],[11,R[148],E,E,102,[[],[R[10]]]],[11,"borrow",E,E,102,[[["self"]],[T]]],[11,R[146],E,E,102,[[["self"]],[T]]],[11,R[150],E,E,102,[[["self"]],["typeid"]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[152],E,E,103,[[["self"]],["string"]]],[11,R[147],E,E,103,[[[U]],[R[10]]]],[11,R[148],E,E,103,[[],[R[10]]]],[11,"borrow",E,E,103,[[["self"]],[T]]],[11,R[146],E,E,103,[[["self"]],[T]]],[11,R[150],E,E,103,[[["self"]],["typeid"]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[152],E,E,57,[[["self"]],["string"]]],[11,R[147],E,E,57,[[[U]],[R[10]]]],[11,R[148],E,E,57,[[],[R[10]]]],[11,"borrow",E,E,57,[[["self"]],[T]]],[11,R[146],E,E,57,[[["self"]],[T]]],[11,R[150],E,E,57,[[["self"]],["typeid"]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[152],E,E,58,[[["self"]],["string"]]],[11,R[147],E,E,58,[[[U]],[R[10]]]],[11,R[148],E,E,58,[[],[R[10]]]],[11,"borrow",E,E,58,[[["self"]],[T]]],[11,R[146],E,E,58,[[["self"]],[T]]],[11,R[150],E,E,58,[[["self"]],["typeid"]]],[11,"into",R[124],E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[147],E,E,61,[[[U]],[R[10]]]],[11,R[148],E,E,61,[[],[R[10]]]],[11,"borrow",E,E,61,[[["self"]],[T]]],[11,R[146],E,E,61,[[["self"]],[T]]],[11,R[150],E,E,61,[[["self"]],["typeid"]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[147],E,E,62,[[[U]],[R[10]]]],[11,R[148],E,E,62,[[],[R[10]]]],[11,"borrow",E,E,62,[[["self"]],[T]]],[11,R[146],E,E,62,[[["self"]],[T]]],[11,R[150],E,E,62,[[["self"]],["typeid"]]],[11,R[155],E,E,62,[[["pin"],["f"],[R[11]]],["poll"]]],[11,"into",R[162],E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[152],E,E,104,[[["self"]],["string"]]],[11,R[147],E,E,104,[[[U]],[R[10]]]],[11,R[148],E,E,104,[[],[R[10]]]],[11,"borrow",E,E,104,[[["self"]],[T]]],[11,R[146],E,E,104,[[["self"]],[T]]],[11,R[150],E,E,104,[[["self"]],["typeid"]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[152],E,E,60,[[["self"]],["string"]]],[11,R[147],E,E,60,[[[U]],[R[10]]]],[11,R[148],E,E,60,[[],[R[10]]]],[11,"borrow",E,E,60,[[["self"]],[T]]],[11,R[146],E,E,60,[[["self"]],[T]]],[11,R[150],E,E,60,[[["self"]],["typeid"]]],[11,"into",R[127],E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[153],E,E,66,[[["self"]],[T]]],[11,R[149],E,E,66,[[["self"],[T]]]],[11,R[147],E,E,66,[[[U]],[R[10]]]],[11,R[148],E,E,66,[[],[R[10]]]],[11,"borrow",E,E,66,[[["self"]],[T]]],[11,R[146],E,E,66,[[["self"]],[T]]],[11,R[150],E,E,66,[[["self"]],["typeid"]]],[11,R[151],E,E,66,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[147],E,E,67,[[[U]],[R[10]]]],[11,R[148],E,E,67,[[],[R[10]]]],[11,"borrow",E,E,67,[[["self"]],[T]]],[11,R[146],E,E,67,[[["self"]],[T]]],[11,R[150],E,E,67,[[["self"]],["typeid"]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[147],E,E,105,[[[U]],[R[10]]]],[11,R[148],E,E,105,[[],[R[10]]]],[11,"borrow",E,E,105,[[["self"]],[T]]],[11,R[146],E,E,105,[[["self"]],[T]]],[11,R[150],E,E,105,[[["self"]],["typeid"]]],[11,"into",R[163],E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[152],E,E,106,[[["self"]],["string"]]],[11,R[147],E,E,106,[[[U]],[R[10]]]],[11,R[148],E,E,106,[[],[R[10]]]],[11,"borrow",E,E,106,[[["self"]],[T]]],[11,R[146],E,E,106,[[["self"]],[T]]],[11,R[150],E,E,106,[[["self"]],["typeid"]]],[11,"into",R[164],E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[152],E,E,68,[[["self"]],["string"]]],[11,R[147],E,E,68,[[[U]],[R[10]]]],[11,R[148],E,E,68,[[],[R[10]]]],[11,"borrow",E,E,68,[[["self"]],[T]]],[11,R[146],E,E,68,[[["self"]],[T]]],[11,R[150],E,E,68,[[["self"]],["typeid"]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[147],E,E,107,[[[U]],[R[10]]]],[11,R[148],E,E,107,[[],[R[10]]]],[11,"borrow",E,E,107,[[["self"]],[T]]],[11,R[146],E,E,107,[[["self"]],[T]]],[11,R[150],E,E,107,[[["self"]],["typeid"]]],[11,R[155],E,E,107,[[["pin"],["f"],[R[11]]],["poll"]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[147],E,E,69,[[[U]],[R[10]]]],[11,R[148],E,E,69,[[],[R[10]]]],[11,"borrow",E,E,69,[[["self"]],[T]]],[11,R[146],E,E,69,[[["self"]],[T]]],[11,R[150],E,E,69,[[["self"]],["typeid"]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[147],E,E,70,[[[U]],[R[10]]]],[11,R[148],E,E,70,[[],[R[10]]]],[11,"borrow",E,E,70,[[["self"]],[T]]],[11,R[146],E,E,70,[[["self"]],[T]]],[11,R[150],E,E,70,[[["self"]],["typeid"]]],[11,"into",R[141],E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[153],E,E,108,[[["self"]],[T]]],[11,R[149],E,E,108,[[["self"],[T]]]],[11,R[147],E,E,108,[[[U]],[R[10]]]],[11,R[148],E,E,108,[[],[R[10]]]],[11,"borrow",E,E,108,[[["self"]],[T]]],[11,R[146],E,E,108,[[["self"]],[T]]],[11,R[150],E,E,108,[[["self"]],["typeid"]]],[11,"into",R[165],E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[147],E,E,71,[[[U]],[R[10]]]],[11,R[148],E,E,71,[[],[R[10]]]],[11,"borrow",E,E,71,[[["self"]],[T]]],[11,R[146],E,E,71,[[["self"]],[T]]],[11,R[150],E,E,71,[[["self"]],["typeid"]]],[11,R[151],E,E,71,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",R[141],E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[147],E,E,73,[[[U]],[R[10]]]],[11,R[148],E,E,73,[[],[R[10]]]],[11,"borrow",E,E,73,[[["self"]],[T]]],[11,R[146],E,E,73,[[["self"]],[T]]],[11,R[150],E,E,73,[[["self"]],["typeid"]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[152],E,E,74,[[["self"]],["string"]]],[11,R[147],E,E,74,[[[U]],[R[10]]]],[11,R[148],E,E,74,[[],[R[10]]]],[11,"borrow",E,E,74,[[["self"]],[T]]],[11,R[146],E,E,74,[[["self"]],[T]]],[11,R[150],E,E,74,[[["self"]],["typeid"]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[153],E,E,75,[[["self"]],[T]]],[11,R[149],E,E,75,[[["self"],[T]]]],[11,R[147],E,E,75,[[[U]],[R[10]]]],[11,R[148],E,E,75,[[],[R[10]]]],[11,"borrow",E,E,75,[[["self"]],[T]]],[11,R[146],E,E,75,[[["self"]],[T]]],[11,R[150],E,E,75,[[["self"]],["typeid"]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[147],E,E,76,[[[U]],[R[10]]]],[11,R[148],E,E,76,[[],[R[10]]]],[11,"borrow",E,E,76,[[["self"]],[T]]],[11,R[146],E,E,76,[[["self"]],[T]]],[11,R[150],E,E,76,[[["self"]],["typeid"]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[152],E,E,109,[[["self"]],["string"]]],[11,R[147],E,E,109,[[[U]],[R[10]]]],[11,R[148],E,E,109,[[],[R[10]]]],[11,"borrow",E,E,109,[[["self"]],[T]]],[11,R[146],E,E,109,[[["self"]],[T]]],[11,R[150],E,E,109,[[["self"]],["typeid"]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[147],E,E,77,[[[U]],[R[10]]]],[11,R[148],E,E,77,[[],[R[10]]]],[11,"borrow",E,E,77,[[["self"]],[T]]],[11,R[146],E,E,77,[[["self"]],[T]]],[11,R[150],E,E,77,[[["self"]],["typeid"]]],[11,R[155],E,E,77,[[["pin"],["f"],[R[11]]],["poll"]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[147],E,E,78,[[[U]],[R[10]]]],[11,R[148],E,E,78,[[],[R[10]]]],[11,"borrow",E,E,78,[[["self"]],[T]]],[11,R[146],E,E,78,[[["self"]],[T]]],[11,R[150],E,E,78,[[["self"]],["typeid"]]],[11,R[151],E,E,78,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",R[165],E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[147],E,E,72,[[[U]],[R[10]]]],[11,R[148],E,E,72,[[],[R[10]]]],[11,"borrow",E,E,72,[[["self"]],[T]]],[11,R[146],E,E,72,[[["self"]],[T]]],[11,R[150],E,E,72,[[["self"]],["typeid"]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[153],E,E,110,[[["self"]],[T]]],[11,R[149],E,E,110,[[["self"],[T]]]],[11,R[147],E,E,110,[[[U]],[R[10]]]],[11,R[148],E,E,110,[[],[R[10]]]],[11,"borrow",E,E,110,[[["self"]],[T]]],[11,R[146],E,E,110,[[["self"]],[T]]],[11,R[150],E,E,110,[[["self"]],["typeid"]]],[11,"cmp",R[85],E,4,[[["self"],[R[166]]],[R[167]]]],[11,"from",E,E,79,[[["intoinnererror"]],["error"]]],[11,"from",E,"Converts a [`NulError`] into a [`io::Error`].",79,[[["nulerror"]],["error"]]],[11,"from",E,"Converts an [`ErrorKind`] into an [`Error`].",79,[[[R[166]]],["error"]]],[11,"eq",E,E,4,[[["self"],[R[166]]],["bool"]]],[11,R[169],E,E,4,[[["self"],[R[166]]],[[R[48],[R[167]]],[R[167]]]]],[11,"fmt",E,E,4,[[[R[168]],["self"]],[["error"],[R[10],["error"]]]]],[11,"fmt",E,E,79,[[[R[168]],["self"]],[["error"],[R[10],["error"]]]]],[11,"description",E,E,79,[[["self"]],["str"]]],[11,"cause",E,E,79,[[["self"]],[[R[48],["error"]],["error"]]]],[11,"source",E,E,79,[[["self"]],[["error"],[R[48],["error"]]]]],[11,"clone",E,E,4,[[["self"]],[R[166]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"fmt",E,E,79,[[[R[168]],["self"]],[["error"],[R[10],["error"]]]]],[11,"div_assign",R[141],E,108,[[["self"],["u32"]]]],[11,R[179],E,E,108,[[["self"],[R[49]]]]],[11,"eq",E,E,108,[[["self"],[R[49]]],["bool"]]],[11,"ne",E,E,108,[[["self"],[R[49]]],["bool"]]],[11,R[176],E,E,108,[[],[R[49]]]],[11,"hash",E,E,108,[[["self"],["__h"]]]],[11,R[180],E,E,108,[[["self"],[R[49]]]]],[11,"cmp",E,E,108,[[["self"],[R[49]]],[R[167]]]],[11,"div",E,E,108,[[["u32"]],[R[49]]]],[11,"mul",E,E,108,[[["u32"]],[R[49]]]],[11,"mul_assign",E,E,108,[[["self"],["u32"]]]],[11,"fmt",E,E,108,[[[R[168]],["self"]],[["error"],[R[10],["error"]]]]],[11,"sum",E,E,108,[[["i"]],[R[49]]]],[11,"sum",E,E,108,[[["i"]],[R[49]]]],[11,"sub",E,E,108,[[[R[49]]],[R[49]]]],[11,"clone",E,E,108,[[["self"]],[R[49]]]],[11,R[169],E,E,108,[[["self"],[R[49]]],[[R[48],[R[167]]],[R[167]]]]],[11,"lt",E,E,108,[[["self"],[R[49]]],["bool"]]],[11,"le",E,E,108,[[["self"],[R[49]]],["bool"]]],[11,"gt",E,E,108,[[["self"],[R[49]]],["bool"]]],[11,"ge",E,E,108,[[["self"],[R[49]]],["bool"]]],[11,"add",E,E,108,[[[R[49]]],[R[49]]]],[11,R[80],R[85],E,9,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[170],E,E,9,[[["self"],["usize"],["pin"]]]],[11,R[80],E,E,10,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[170],E,E,10,[[["self"],["usize"],["pin"]]]],[11,R[80],E,E,11,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[170],E,E,11,[[["self"],["usize"],["pin"]]]],[11,R[80],E,E,85,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[170],E,E,85,[[["self"],["usize"],["pin"]]]],[11,R[80],E,E,14,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[170],E,E,14,[[["self"],["usize"],["pin"]]]],[11,R[87],R[7],E,0,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],R[85],E,5,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,81,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,7,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[90],E,E,7,[[["b"],[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,9,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[84],E,E,9,[[["self"]],["bool"]]],[11,R[87],E,E,10,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[84],E,E,10,[[["self"]],["bool"]]],[11,R[87],E,E,11,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[84],E,E,11,[[["self"]],["bool"]]],[11,R[87],E,E,85,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,86,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[84],E,E,14,[[["self"]],["bool"]]],[11,R[87],E,E,14,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10],["usize","error"]]]]],[11,R[84],R[42],E,25,[[["self"]],["bool"]]],[11,R[87],E,E,25,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[84],R[36],E,26,[[["self"]],["bool"]]],[11,R[87],E,E,26,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[84],R[71],E,89,[[["self"]],["bool"]]],[11,R[87],E,E,89,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[84],R[36],E,35,[[["self"]],["bool"]]],[11,R[87],E,E,35,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],R[154],E,92,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,93,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[171],R[7],E,0,[[[R[27]],[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[172],E,E,0,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10],["u64"]]]]],[11,R[93],E,E,0,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,0,[[[R[11]],["self"],["pin"]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[97],E,E,0,[[[R[11]],["self"],["pin"]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[93],R[85],E,5,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,5,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[97],E,E,5,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[93],E,E,80,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,80,[[[R[11]],["self"],["pin"]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[97],E,E,80,[[[R[11]],["self"],["pin"]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[93],E,E,82,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,82,[[[R[11]],["self"],["pin"]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[97],E,E,82,[[[R[11]],["self"],["pin"]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[93],E,E,8,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10],["usize","error"]]]]],[11,R[95],E,E,8,[[[R[11]],["self"],["pin"]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[97],E,E,8,[[[R[11]],["self"],["pin"]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[99],E,E,8,[[["b"],[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10],["usize","error"]]]]],[11,R[93],E,E,9,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,9,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[97],E,E,9,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[93],E,E,10,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,10,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[97],E,E,10,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[93],E,E,11,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,11,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[97],E,E,11,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[93],E,E,87,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10],["usize","error"]]]]],[11,R[95],E,E,87,[[[R[11]],["self"],["pin"]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[97],E,E,87,[[[R[11]],["self"],["pin"]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[93],R[42],E,88,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[99],E,E,88,[[["b"],[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,88,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[97],E,E,88,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[93],R[36],E,26,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[99],E,E,26,[[["b"],[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,26,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[97],E,E,26,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[93],R[71],E,90,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,90,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[97],E,E,90,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[93],R[36],E,35,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,35,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[97],E,E,35,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[93],R[154],E,91,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,91,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[97],E,E,91,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,"drop",R[85],E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"drop",R[159],E,50,[[["self"]]]],[11,"drop",E,E,51,[[["self"]]]],[11,"drop",R[112],E,99,[[["self"]]]],[11,"drop",R[124],E,61,[[["self"]]]],[11,"drop",E,E,62,[[["self"]]]],[11,"drop",R[112],E,64,[[["self"]]]],[11,"drop",R[127],E,66,[[["self"]]]],[11,"drop",E,E,67,[[["self"]]]],[11,"drop",R[164],E,107,[[["self"]]]],[11,"as_ref",R[42],E,25,[[["self"]],[R[44]]]],[11,"as_ref",E,E,88,[[["self"]],[R[44]]]],[11,"as_ref",R[57],E,30,[[["self"]],[R[52]]]],[11,"as_ref",E,E,29,[[["self"]],[R[52]]]],[11,"as_ref",R[71],E,89,[[["self"]],[R[76]]]],[11,"as_ref",E,E,90,[[["self"]],[R[76]]]],[11,"from",R[7],E,0,[[["file"]],["self"]]],[11,"from",E,E,1,[[[R[5]]],[R[5]]]],[11,"from",R[85],E,10,[[[R[173]],[R[174],[R[173]]]],["self"]]],[11,"from",E,E,10,[[[R[173],[R[174]]],[R[174]]],["self"]]],[11,"from",R[154],E,37,[[["stdcommand"]],[R[101]]]],[11,"from",R[161],E,56,[[],[R[110]]]],[11,"from",E,E,57,[[],[R[115]]]],[11,"from",E,E,57,[[[R[110]]],[R[115]]]],[11,"from",R[112],E,59,[[[T]],["self"]]],[11,"from",E,E,65,[[[T]],["self"]]],[11,"from",R[85],E,79,[[[R[130]]],["error"]]],[11,"from",R[141],E,75,[[[R[142]]],[R[142]]]],[11,"from",R[85],E,79,[[["elapsed"]],["error"]]],[11,"clone",R[7],E,1,[[["self"]],[R[5]]]],[11,"clone",R[71],E,31,[[["self"]],["ucred"]]],[11,"clone",R[156],E,39,[[["self"]],["handle"]]],[11,"clone",R[157],E,41,[[["self"]],[R[175]]]],[11,"clone",R[112],E,46,[[["self"]],["barrierwaitresult"]]],[11,"clone",R[159],E,50,[[["self"]],["sender"]]],[11,"clone",R[160],E,53,[[["self"]],["self"]]],[11,"clone",E,E,55,[[["self"]],["self"]]],[11,"clone",R[127],E,66,[[["self"]],["self"]]],[11,"clone",R[165],E,110,[[["self"]],["key"]]],[11,"clone",R[141],E,75,[[["self"]],[R[142]]]],[11,R[176],R[7],E,1,[[],["self"]]],[11,R[176],R[156],E,38,[[],["self"]]],[11,R[176],R[112],E,59,[[],["self"]]],[11,R[176],E,E,65,[[],["self"]]],[11,R[176],R[164],E,69,[[],["self"]]],[11,R[176],R[165],E,71,[[],[R[139]]]],[11,"eq",R[71],E,31,[[["ucred"],["self"]],["bool"]]],[11,"ne",E,E,31,[[["ucred"],["self"]],["bool"]]],[11,"eq",R[159],E,48,[[[R[177]],["self"]],["bool"]]],[11,"ne",E,E,48,[[[R[177]],["self"]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[111]]],["bool"]]],[11,"ne",E,E,49,[[["self"],[R[111]]],["bool"]]],[11,"eq",R[161],E,58,[[[R[111]],["self"]],["bool"]]],[11,"eq",R[162],E,104,[[[R[177]],["self"]],["bool"]]],[11,"ne",E,E,104,[[[R[177]],["self"]],["bool"]]],[11,"eq",E,E,60,[[[R[111]],["self"]],["bool"]]],[11,"eq",R[141],E,75,[[["self"],[R[142]]],["bool"]]],[11,"ne",E,E,75,[[["self"],[R[142]]],["bool"]]],[11,"eq",E,E,109,[[["self"],["elapsed"]],["bool"]]],[11,"ne",E,E,109,[[["self"],["elapsed"]],["bool"]]],[11,R[169],E,E,75,[[["self"],[R[142]]],[[R[48],[R[167]]],[R[167]]]]],[11,"lt",E,E,75,[[["self"],[R[142]]],["bool"]]],[11,"le",E,E,75,[[["self"],[R[142]]],["bool"]]],[11,"gt",E,E,75,[[["self"],[R[142]]],["bool"]]],[11,"ge",E,E,75,[[["self"],[R[142]]],["bool"]]],[11,"fmt",R[57],E,27,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[156],E,94,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[159],E,48,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,49,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[161],E,56,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,57,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,102,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,58,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,103,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[112],E,99,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[162],E,104,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,60,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[163],E,106,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[164],E,68,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[141],E,74,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,109,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[7],E,0,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,1,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,2,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,3,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[85],E,5,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,6,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,80,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,81,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,82,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,7,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,8,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,83,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,9,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,10,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,11,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,84,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,85,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,12,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,86,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,87,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,13,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,14,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[36],E,23,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[42],E,24,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,25,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,88,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[36],E,26,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,28,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[57],E,30,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,29,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,27,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[36],E,32,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[71],E,33,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[36],E,34,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[71],E,89,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,90,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[36],E,35,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[71],E,31,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[154],E,37,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,36,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,91,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,92,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,93,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[156],E,38,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,39,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,94,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,40,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[157],E,41,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,42,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[158],E,95,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,96,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,97,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,98,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[112],E,45,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,46,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[159],E,47,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,48,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,49,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,50,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,51,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[160],E,53,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,52,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,55,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,54,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[161],E,56,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,57,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,102,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,58,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,103,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[112],E,59,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,99,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[124],E,61,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,62,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[162],E,104,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,60,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[112],E,63,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,64,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,65,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,100,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,101,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[127],E,66,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,67,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,105,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[163],E,106,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[164],E,68,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,107,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,69,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,70,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[165],E,71,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,72,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,110,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[141],E,73,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,74,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,75,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,76,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,77,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,109,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,78,[[["self"],[R[168]]],[R[10]]]],[11,"sub",E,E,75,[[[R[142]]],[R[49]]]],[11,"sub",E,E,75,[[[R[49]]],[R[142]]]],[11,R[147],R[36],R[178],23,[[[R[38]]],[R[10]]]],[11,R[147],E,R[178],26,[[[R[44]]],[R[10]]]],[11,R[147],E,R[178],28,[[[R[52]]],[R[10]]]],[11,R[147],E,R[178],32,[[[R[64]]],[R[10]]]],[11,R[147],E,R[178],34,[[[R[72]]],[R[10]]]],[11,R[147],E,R[178],35,[[[R[76]]],[R[10]]]],[11,"add",R[141],E,75,[[[R[49]]],[R[142]]]],[11,R[179],E,E,75,[[["self"],[R[49]]]]],[11,R[180],E,E,75,[[["self"],[R[49]]]]],[11,"deref",R[112],E,99,[[["self"]]]],[11,"deref",E,E,100,[[["self"]],[T]]],[11,"deref",E,E,101,[[["self"]],[T]]],[11,"deref",R[127],E,105,[[["self"]],[T]]],[11,R[181],R[112],E,99,[[["self"]]]],[11,R[181],E,E,101,[[["self"]],[T]]],[11,"hash",R[71],E,31,[[["self"],["__h"]]]],[11,R[182],R[7],E,0,[[["self"]],["rawfd"]]],[11,R[182],R[36],E,23,[[["self"]],["rawfd"]]],[11,R[182],E,E,26,[[["self"]],["rawfd"]]],[11,R[182],E,E,28,[[["self"]],["rawfd"]]],[11,R[182],E,E,32,[[["self"]],["rawfd"]]],[11,R[182],E,E,34,[[["self"]],["rawfd"]]],[11,R[182],E,E,35,[[["self"]],["rawfd"]]],[11,R[182],R[154],E,91,[[["self"]],["rawfd"]]],[11,R[182],E,E,92,[[["self"]],["rawfd"]]],[11,R[182],E,E,93,[[["self"]],["rawfd"]]],[11,"ino",R[7],E,3,[[["self"]],["u64"]]],[11,"poll",R[85],E,83,[[[R[11]],["self"],["pin"]],["poll"]]],[11,"poll",E,E,84,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10],["u64"]]]]],[11,"poll",R[154],E,36,[[[R[11]],["self"],["pin"]],["poll"]]],[11,"poll",R[124],E,62,[[[R[11]],["self"],["pin"]],["poll"]]],[11,"poll",R[164],E,107,[[[R[11]],["self"],["pin"]],["poll"]]],[11,"poll",E,E,69,[[[R[11]],["self"],["pin"]],["poll"]]],[11,"poll",R[141],E,73,[[[R[11]],["self"],["pin"]],["poll"]]],[11,"poll",E,E,77,[[[R[11]],["self"],["pin"]],["poll"]]],[11,R[183],R[7],E,2,[[[R[11]],["self"],["pin"]],[[R[48]],["poll",[R[48]]]]]],[11,R[183],R[85],E,12,[[[R[11]],["self"],["pin"]],[[R[48]],["poll",[R[48]]]]]],[11,R[183],E,E,13,[[[R[11]],["self"],["pin"]],[[R[48]],["poll",[R[48]]]]]],[11,R[183],R[42],E,24,[[[R[11]],["self"],["pin"]],[[R[48]],["poll",[R[48]]]]]],[11,R[183],R[71],E,33,[[[R[11]],["self"],["pin"]],[[R[48]],["poll",[R[48]]]]]],[11,R[183],R[157],E,42,[[[R[11]],["self"],["pin"]],[["poll",[R[48]]],[R[48]]]]],[11,R[183],R[158],E,95,[[[R[11]],["self"],["pin"]],[["poll",[R[48]]],[R[48]]]]],[11,R[184],E,E,95,[[["self"]]]],[11,R[183],E,E,96,[[[R[11]],["self"],["pin"]],[["poll",[R[48]]],[R[48]]]]],[11,R[184],E,E,96,[[["self"]]]],[11,R[183],E,E,97,[[[R[11]],["self"],["pin"]],[["poll",[R[48]]],[R[48]]]]],[11,R[184],E,E,97,[[["self"]]]],[11,R[183],E,E,98,[[[R[11]],["self"],["pin"]],[["poll",[R[48]]],[R[48]]]]],[11,R[184],E,E,98,[[["self"]]]],[11,R[183],R[159],E,51,[[[R[11]],["self"],["pin"]],[[R[48],[R[10]]],["poll",[R[48]]]]]],[11,R[183],R[160],E,52,[[[R[11]],["self"],["pin"]],[["poll",[R[48]]],[R[48]]]]],[11,R[183],E,E,54,[[[R[11]],["self"],["pin"]],[["poll",[R[48]]],[R[48]]]]],[11,R[183],R[127],E,66,[[[R[11]],["self"],["pin"]],[["poll",[R[48]]],[R[48]]]]],[11,R[183],R[165],E,71,[[[R[11]],["self"],["pin"]],[[R[48]],["poll",[R[48]]]]]],[11,R[183],R[141],E,76,[[[R[11]],["self"],["pin"]],[[R[48],[R[142]]],["poll",[R[48]]]]]],[11,R[183],E,E,78,[[[R[11]],["self"],["pin"]],[[R[48]],["poll",[R[48]]]]]],[11,"new",R[85],"Creates a new I/O error from a known kind of error as well…",79,[[["e"],[R[166]]],["error"]]],[11,"last_os_error",E,"Returns an error representing the last OS error which…",79,[[],["error"]]],[11,"from_raw_os_error",E,"Creates a new instance of an `Error` from a particular OS…",79,[[["i32"]],["error"]]],[11,"raw_os_error",E,"Returns the OS error that this error represents (if any).",79,[[["self"]],[[R[48],["i32"]],["i32"]]]],[11,R[20],E,"Returns a reference to the inner error wrapped by this…",79,[[["self"]],[["error"],[R[48],["error"]]]]],[11,R[21],E,"Returns a mutable reference to the inner error wrapped by…",79,[[["self"]],[["error"],[R[48],["error"]]]]],[11,R[17],E,"Consumes the `Error`, returning its inner error (if any).",79,[[],[["box",["error"]],[R[48],["box"]]]]],[11,"kind",E,"Returns the corresponding `ErrorKind` for this error.",79,[[["self"]],[R[166]]]],[11,R[84],E,R[86],16,[[["self"]],["bool"]]],[11,R[90],E,R[29],16,[[["b"],[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[99],E,R[100],18,[[["b"],[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10],["usize","error"]]]]],[11,R[185],E,R[186],19,[[["self"],["vec"],["u8"]],[R[187]]]],[11,R[188],E,R[189],19,[[["string"],["self"]],["readline"]]],[11,"split",E,R[190],19,[[["u8"]],["split"]]],[11,"lines",E,R[191],19,[[],["lines"]]],[11,"chain",E,R[192],20,[[["r"]],["chain"]]],[11,"read",E,R[29],20,[[["self"]],["read"]]],[11,R[282],E,R[29],20,[[["self"],["b"]],["readbuf"]]],[11,R[193],E,R[194],20,[[["self"]],[R[195]]]],[11,"read_u8",E,R[196],20,[[["self"]],[["self"],["readu8"]]]],[11,"read_i8",E,R[197],20,[[["self"]],[["readi8"],["self"]]]],[11,"read_u16",E,R[198],20,[[["self"]],[["self"],["readu16"]]]],[11,"read_i16",E,R[199],20,[[["self"]],[["readi16"],["self"]]]],[11,"read_u32",E,R[200],20,[[["self"]],[["self"],["readu32"]]]],[11,"read_i32",E,R[201],20,[[["self"]],[["self"],["readi32"]]]],[11,"read_u64",E,R[202],20,[[["self"]],[["self"],["readu64"]]]],[11,"read_i64",E,R[203],20,[[["self"]],[["self"],["readi64"]]]],[11,R[204],E,R[205],20,[[["self"]],[["self"],["readu128"]]]],[11,R[206],E,R[207],20,[[["self"]],[["readi128"],["self"]]]],[11,R[208],E,R[209],20,[[["self"],["vec"]],[R[210]]]],[11,R[30],E,R[211],20,[[["string"],["self"]],[R[212]]]],[11,"take",E,R[213],20,[[["u64"]],["take"]]],[11,"seek",E,R[214],21,[[["self"],[R[27]]],["seek"]]],[11,"write",E,R[215],22,[[["self"]],["write"]]],[11,R[216],E,R[217],22,[[["self"],["b"]],["writebuf"]]],[11,R[218],E,R[219],22,[[["self"]],["writeall"]]],[11,"write_u8",E,R[32],22,[[["self"],["u8"]],[["self"],["writeu8"]]]],[11,"write_i8",E,R[32],22,[[["self"],["i8"]],[["writei8"],["self"]]]],[11,R[220],E,R[221],22,[[["u16"],["self"]],[["writeu16"],["self"]]]],[11,R[222],E,R[223],22,[[["self"],["i16"]],[["self"],["writei16"]]]],[11,R[224],E,R[225],22,[[["self"],["u32"]],[["self"],["writeu32"]]]],[11,R[226],E,R[227],22,[[["self"],["i32"]],[["writei32"],["self"]]]],[11,R[228],E,R[229],22,[[["self"],["u64"]],[["writeu64"],["self"]]]],[11,R[230],E,R[231],22,[[["i64"],["self"]],[["writei64"],["self"]]]],[11,R[232],E,R[233],22,[[["self"],["u128"]],[[R[234]],["self"]]]],[11,R[235],E,R[236],22,[[["self"],["i128"]],[["self"],[R[237]]]]],[11,"flush",E,R[238],22,[[["self"]],["flush"]]],[11,R[33],E,R[239],22,[[["self"]],[R[33]]]],[18,"SECOND",R[141],"The duration of one second.",108,N],[18,"MILLISECOND",E,"The duration of one millisecond.",108,N],[18,"MICROSECOND",E,"The duration of one microsecond.",108,N],[18,"NANOSECOND",E,"The duration of one nanosecond.",108,N],[11,"new",E,R[240],108,[[["u32"],["u64"]],[R[49]]]],[11,"from_secs",E,R[240],108,[[["u64"]],[R[49]]]],[11,"from_millis",E,R[240],108,[[["u64"]],[R[49]]]],[11,"from_micros",E,R[240],108,[[["u64"]],[R[49]]]],[11,"from_nanos",E,R[240],108,[[["u64"]],[R[49]]]],[11,"as_secs",E,"Returns the number of whole seconds contained by this…",108,[[["self"]],["u64"]]],[11,"subsec_millis",E,R[241],108,[[["self"]],["u32"]]],[11,"subsec_micros",E,R[241],108,[[["self"]],["u32"]]],[11,"subsec_nanos",E,"Returns the fractional part of this `Duration`, in…",108,[[["self"]],["u32"]]],[11,"as_millis",E,"Returns the total number of whole milliseconds contained…",108,[[["self"]],["u128"]]],[11,"as_micros",E,"Returns the total number of whole microseconds contained…",108,[[["self"]],["u128"]]],[11,"as_nanos",E,"Returns the total number of nanoseconds contained by this…",108,[[["self"]],["u128"]]],[11,R[242],E,"Checked `Duration` addition. Computes `self + other`,…",108,[[[R[49]]],[[R[48],[R[49]]],[R[49]]]]],[11,R[243],E,"Checked `Duration` subtraction. Computes `self - other`,…",108,[[[R[49]]],[[R[48],[R[49]]],[R[49]]]]],[11,"checked_mul",E,"Checked `Duration` multiplication. Computes `self *…",108,[[["u32"]],[[R[48],[R[49]]],[R[49]]]]],[11,"checked_div",E,"Checked `Duration` division. Computes `self / other`,…",108,[[["u32"]],[[R[48],[R[49]]],[R[49]]]]],[11,"as_secs_f64",E,R[244],108,[[["self"]],["f64"]]],[11,"as_secs_f32",E,R[244],108,[[["self"]],["f32"]]],[11,"from_secs_f64",E,R[240],108,[[["f64"]],[R[49]]]],[11,"from_secs_f32",E,R[240],108,[[["f32"]],[R[49]]]],[11,"mul_f64",E,"Multiplies `Duration` by `f64`.",108,[[["f64"]],[R[49]]]],[11,"mul_f32",E,"Multiplies `Duration` by `f32`.",108,[[["f32"]],[R[49]]]],[11,"div_f64",E,"Divide `Duration` by `f64`.",108,[[["f64"]],[R[49]]]],[11,"div_f32",E,"Divide `Duration` by `f32`.",108,[[["f32"]],[R[49]]]],[11,"div_duration_f64",E,"Divide `Duration` by `Duration` and return `f64`.",108,[[[R[49]]],["f64"]]],[11,"div_duration_f32",E,"Divide `Duration` by `Duration` and return `f32`.",108,[[[R[49]]],["f32"]]]],"p":[[3,"File"],[3,R[245]],[3,"ReadDir"],[3,"DirEntry"],[4,R[246]],[3,R[247]],[3,R[248]],[3,R[34]],[3,R[35]],[3,R[249]],[3,R[250]],[3,R[251]],[3,"Lines"],[3,"Split"],[3,"Take"],[8,R[78]],[8,R[83]],[8,R[252]],[8,R[91]],[8,R[253]],[8,R[254]],[8,R[255]],[8,R[256]],[3,R[257]],[3,R[63]],[3,R[34]],[3,R[258]],[3,R[259]],[3,R[260]],[3,"RecvHalf"],[3,"SendHalf"],[3,"UCred"],[3,R[261]],[3,R[63]],[3,R[262]],[3,R[263]],[3,"Child"],[3,"Command"],[3,R[341]],[3,"Handle"],[3,"Runtime"],[3,R[264]],[3,"Signal"],[8,"Stream"],[8,R[265]],[3,"Barrier"],[3,R[266]],[3,R[118]],[4,R[119]],[4,R[120]],[3,"Sender"],[3,R[123]],[3,R[123]],[3,"Sender"],[3,R[267]],[3,R[268]],[3,R[118]],[4,R[269]],[4,R[120]],[3,"Mutex"],[4,R[120]],[3,"Sender"],[3,R[123]],[3,R[270]],[3,R[271]],[3,"RwLock"],[3,R[123]],[3,"Sender"],[3,R[272]],[3,"LocalSet"],[3,"LocalKey"],[3,R[138]],[3,"Expired"],[3,"Delay"],[3,"Error"],[3,"Instant"],[3,"Interval"],[3,"Timeout"],[3,"Throttle"],[3,"Error"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,"Seek"],[3,"Copy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,R[35]],[3,R[34]],[3,R[35]],[3,R[273]],[3,R[274]],[3,R[275]],[3,R[276]],[3,"Empty"],[3,"Iter"],[3,"Once"],[3,"Pending"],[3,R[277]],[3,R[278]],[3,R[279]],[3,R[119]],[3,R[280]],[3,R[119]],[3,"Ref"],[3,R[118]],[3,R[281]],[3,"Duration"],[3,"Elapsed"],[3,"Key"]]};
searchIndex["tokio_macros"]={"doc":"Macros for use with Tokio","i":[[23,"main_threaded","tokio_macros",R[0],N,N],[23,"main",E,R[0],N,N],[23,"main_basic",E,R[0],N,N],[23,"test_threaded",E,R[1],N,N],[23,"test",E,R[1],N,N],[23,"test_basic",E,R[1],N,N]],"p":[]};
searchIndex["tokio_test"]={"doc":"Tokio and Futures based testing utilites","i":[[5,R[334],R[337],"Runs the provided future, blocking the current thread…",N,[[["future"]]]],[0,"io",E,"A mock type implementing [`AsyncRead`] and [`AsyncWrite`].",N,N],[3,"Mock",R[338],"An I/O object that follows a predefined script.",N,N],[3,"Handle",E,"A handle to send additional actions to the related `Mock`.",N,N],[3,R[341],E,"Builds `Mock` instances.",N,N],[11,"new",E,"Return a new, empty `Builder.",0,[[],["self"]]],[11,"read",E,R[335],0,[[["self"]],["self"]]],[11,"write",E,R[336],0,[[["self"]],["self"]]],[11,"wait",E,"Sequence a wait.",0,[[["self"],[R[49]]],["self"]]],[11,"build",E,"Build a `Mock` value according to the defined script.",0,[[["self"]],["mock"]]],[11,"build_with_handle",E,"Build a `Mock` value paired with a handle",0,[[["self"]]]],[11,"read",E,R[335],1,[[["self"]],["self"]]],[11,"write",E,R[336],1,[[["self"]],["self"]]],[0,"task",R[337],"Futures task based helpers",N,N],[3,"Spawn",R[339],"Future spawned on a mock task",N,N],[5,"spawn",E,"TOOD: dox",N,[[[T]],["spawn"]]],[11,R[17],E,"Consumes `self` returning the inner value",2,[[],[T]]],[11,"is_woken",E,"Returns `true` if the inner future has received a wake…",2,[[["self"]],["bool"]]],[11,"waker_ref_count",E,"Returns the number of references to the task waker",2,[[["self"]],["usize"]]],[11,"enter",E,"Enter the task context",2,[[["self"],["f"]],["r"]]],[11,"poll",E,"Polls a future",2,[[["self"]],["poll"]]],[11,R[183],E,"Polls a stream",2,[[["self"]],[[R[48]],["poll",[R[48]]]]]],[14,"assert_ready",R[337],"Asserts a `Poll` is ready, returning the value.",N,N],[14,"assert_ready_ok",E,"Asserts a `Poll<Result<...>>` is ready and `Ok`, returning…",N,N],[14,"assert_ready_err",E,"Asserts a `Poll<Result<...>>` is ready and `Err`,…",N,N],[14,"assert_pending",E,"Asserts a `Poll` is pending.",N,N],[14,"assert_ready_eq",E,"Asserts if a poll is ready and check for equality on the…",N,N],[14,"assert_ok",E,"Asserts that the expression evaluates to `Ok` and returns…",N,N],[14,"assert_err",E,"Asserts that the expression evaluates to `Err` and returns…",N,N],[11,"into",R[338],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[147],E,E,3,[[[U]],[R[10]]]],[11,R[148],E,E,3,[[],[R[10]]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[146],E,E,3,[[["self"]],[T]]],[11,R[150],E,E,3,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[147],E,E,1,[[[U]],[R[10]]]],[11,R[148],E,E,1,[[],[R[10]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[146],E,E,1,[[["self"]],[T]]],[11,R[150],E,E,1,[[["self"]],["typeid"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[153],E,E,0,[[["self"]],[T]]],[11,R[149],E,E,0,[[["self"],[T]]]],[11,R[147],E,E,0,[[[U]],[R[10]]]],[11,R[148],E,E,0,[[],[R[10]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[146],E,E,0,[[["self"]],[T]]],[11,R[150],E,E,0,[[["self"]],["typeid"]]],[11,"into",R[339],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[147],E,E,2,[[[U]],[R[10]]]],[11,R[148],E,E,2,[[],[R[10]]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[146],E,E,2,[[["self"]],[T]]],[11,R[150],E,E,2,[[["self"]],["typeid"]]],[11,"load",E,E,2,[[["self"]]]],[11,"load",E,E,2,[[["self"]],["dynguard"]]],[11,"clone",R[338],E,0,[[["self"]],[R[340]]]],[11,R[176],E,E,0,[[],[R[340]]]],[11,"fmt",E,E,3,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,1,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,0,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[339],E,2,[[["self"],[R[168]]],[R[10]]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,R[181],E,E,2,[[["self"]],[T]]],[11,R[87],R[338],E,3,[[["pin"],["self"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[93],E,E,3,[[["pin"],["self"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[99],E,E,3,[[["pin"],["b"],["self"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,3,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[97],E,E,3,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]]],"p":[[3,R[341]],[3,"Handle"],[3,"Spawn"],[3,"Mock"]]};
searchIndex["tokio_tls"]={"doc":"Async TLS streams","i":[[3,R[331],"tokio_tls","A wrapper around an underlying raw stream which implements…",N,N],[3,R[332],E,"A wrapper around a `native_tls::TlsConnector`, providing…",N,N],[3,R[333],E,"A wrapper around a `native_tls::TlsAcceptor`, providing an…",N,N],[11,R[20],E,"Returns a shared reference to the inner stream.",0,[[["self"]],["s"]]],[11,R[21],E,"Returns a mutable reference to the inner stream.",0,[[["self"]],["s"]]],[11,R[65],E,"Connects the provided stream with this connector, assuming…",1,[[["self"],["str"],["s"]]]],[11,"accept",E,"Accepts a new client connection with the provided stream.",2,[[["self"],["s"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[147],E,E,0,[[[U]],[R[10]]]],[11,R[148],E,E,0,[[],[R[10]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[146],E,E,0,[[["self"]],[T]]],[11,R[150],E,E,0,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[153],E,E,1,[[["self"]],[T]]],[11,R[149],E,E,1,[[["self"],[T]]]],[11,R[147],E,E,1,[[[U]],[R[10]]]],[11,R[148],E,E,1,[[],[R[10]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[146],E,E,1,[[["self"]],[T]]],[11,R[150],E,E,1,[[["self"]],["typeid"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[153],E,E,2,[[["self"]],[T]]],[11,R[149],E,E,2,[[["self"],[T]]]],[11,R[147],E,E,2,[[[U]],[R[10]]]],[11,R[148],E,E,2,[[],[R[10]]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[146],E,E,2,[[["self"]],[T]]],[11,R[150],E,E,2,[[["self"]],["typeid"]]],[11,"from",E,E,1,[[[R[329]]],[R[329]]]],[11,"from",E,E,2,[[[R[330]]],[R[330]]]],[11,"clone",E,E,1,[[["self"]],[R[329]]]],[11,"clone",E,E,2,[[["self"]],[R[330]]]],[11,"fmt",E,E,0,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,1,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,2,[[["self"],[R[168]]],[R[10]]]],[11,R[84],E,E,0,[[["self"]],["bool"]]],[11,R[87],E,E,0,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[93],E,E,0,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,0,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[97],E,E,0,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]]],"p":[[3,R[331]],[3,R[332]],[3,R[333]]]};
searchIndex["tokio_util"]={"doc":"Utilities for working with Tokio.","i":[[0,"codec",R[300],"Utilities for encoding and decoding frames.",N,N],[3,R[318],R[296],"A simple `Codec` implementation that just ships bytes…",N,N],[3,"Framed",E,R[301],N,N],[3,R[316],E,"`FramedParts` contains an export of the data of a Framed…",N,N],[12,"io",E,"The inner transport used to read bytes to and write bytes to",0,N],[12,"codec",E,"The codec",0,N],[12,R[282],E,"The buffer with read but unprocessed data.",0,N],[12,R[216],E,"A buffer with unprocessed data which are not written yet.",0,N],[3,R[319],E,"A `Stream` of messages decoded from an `AsyncRead`.",N,N],[3,R[320],E,"A `Sink` of frames encoded to an `AsyncWrite`.",N,N],[3,R[322],E,"A simple `Codec` implementation that splits up data into…",N,N],[4,R[317],E,"An error occured while encoding or decoding a line.",N,N],[13,"MaxLineLengthExceeded",E,"The maximum line length was exceeded.",1,N],[13,"Io",E,"An IO error occured.",1,N],[11,"new",E,"Creates a new `BytesCodec` for shipping around raw bytes.",2,[[],[R[310]]]],[11,"new",E,R[283],3,[[[U],[T]],["framed"]]],[11,"from_parts",E,R[283],3,[[[R[284]]],["framed"]]],[11,R[20],E,R[285],3,[[["self"]],[T]]],[11,R[21],E,R[286],3,[[["self"]],[T]]],[11,"codec",E,"Returns a reference to the underlying codec wrapped by…",3,[[["self"]],[U]]],[11,"codec_mut",E,"Returns a mutable reference to the underlying codec…",3,[[["self"]],[U]]],[11,R[287],E,R[288],3,[[["self"]],[R[297]]]],[11,R[17],E,"Consumes the `Frame`, returning its underlying I/O stream.",3,[[],[T]]],[11,"into_parts",E,"Consumes the `Frame`, returning its underlying I/O stream,…",3,[[],[R[284]]]],[11,"new",E,"Create a new, default, `FramedParts`",0,[[[U],[T]],[R[284]]]],[11,"new",E,"Creates a new `FramedRead` with the given `decoder`.",4,[[["d"],[T]],[R[294]]]],[11,R[20],E,R[285],4,[[["self"]],[T]]],[11,R[21],E,R[286],4,[[["self"]],[T]]],[11,R[17],E,"Consumes the `FramedRead`, returning its underlying I/O…",4,[[],[T]]],[11,"decoder",E,R[289],4,[[["self"]],["d"]]],[11,"decoder_mut",E,R[290],4,[[["self"]],["d"]]],[11,R[287],E,R[288],4,[[["self"]],[R[297]]]],[11,"new",E,"Creates a new `FramedWrite` with the given `encoder`.",5,[[[T],["e"]],[R[295]]]],[11,R[20],E,R[285],5,[[["self"]],[T]]],[11,R[21],E,R[286],5,[[["self"]],[T]]],[11,R[17],E,"Consumes the `FramedWrite`, returning its underlying I/O…",5,[[],[T]]],[11,"encoder",E,R[289],5,[[["self"]],["e"]]],[11,"encoder_mut",E,R[290],5,[[["self"]],["e"]]],[0,"length_delimited",E,"Frame a stream of bytes based on a length prefix",N,N],[3,R[341],R[305],"Configure length delimited `LengthDelimitedCodec`s.",N,N],[3,R[328],E,"An error when the number of bytes read is more than max…",N,N],[3,R[321],E,"A codec for frames delimited by a frame head specifying…",N,N],[11,"new",E,"Creates a new `LengthDelimitedCodec` with the default…",6,[[],["self"]]],[11,R[340],E,R[291],6,[[],[R[340]]]],[11,R[292],E,"Returns the current max frame setting",6,[[["self"]],["usize"]]],[11,"set_max_frame_length",E,"Updates the max frame setting.",6,[[["self"],["usize"]]]],[11,"new",E,R[291],7,[[],[R[340]]]],[11,"big_endian",E,"Read the length field as a big endian integer",7,[[["self"]],["self"]]],[11,"little_endian",E,"Read the length field as a little endian integer",7,[[["self"]],["self"]]],[11,"native_endian",E,"Read the length field as a native endian integer",7,[[["self"]],["self"]]],[11,R[292],E,"Sets the max frame length",7,[[["self"],["usize"]],["self"]]],[11,"length_field_length",E,"Sets the number of bytes used to represent the length field",7,[[["self"],["usize"]],["self"]]],[11,"length_field_offset",E,"Sets the number of bytes in the header before the length…",7,[[["self"],["usize"]],["self"]]],[11,"length_adjustment",E,"Delta between the payload length specified in the header…",7,[[["isize"],["self"]],["self"]]],[11,"num_skip",E,"Sets the number of bytes to skip before reading the payload",7,[[["self"],["usize"]],["self"]]],[11,"new_codec",E,"Create a configured length delimited `LengthDelimitedCodec`",7,[[["self"]],[R[293]]]],[11,"new_read",E,"Create a configured length delimited `FramedRead`",7,[[["self"],[T]],[[R[293]],[R[294],[R[293]]]]]],[11,"new_write",E,"Create a configured length delimited `FramedWrite`",7,[[["self"],[T]],[[R[293]],[R[295],[R[293]]]]]],[11,"new_framed",E,"Create a configured length delimited `Framed`",7,[[["self"],[T]],[[R[293]],["framed",[R[293]]]]]],[11,"new",R[296],"Returns a `LinesCodec` for splitting up data into lines.",8,[[],[R[311]]]],[11,"new_with_max_length",E,"Returns a `LinesCodec` with a maximum line length limit.",8,[[["usize"]],["self"]]],[11,"max_length",E,"Returns the maximum line length when decoding.",8,[[["self"]],["usize"]]],[8,"Decoder",E,"Decoding of frames via buffers.",N,N],[16,"Item",E,"The type of decoded frames.",9,N],[16,"Error",E,"The type of unrecoverable frame decoding errors.",9,N],[10,"decode",E,"Attempts to decode a frame from the provided buffer of…",9,[[["self"],[R[297]]],[[R[10],[R[48]]],[R[48]]]]],[11,R[309],E,R[315],9,[[["self"],[R[297]]],[[R[10],[R[48]]],[R[48]]]]],[11,"framed",E,R[283],9,[[["sized"],[R[299]],[R[298]]],[["sized"],[R[298]],[R[299]],["framed"]]]],[8,"Encoder",E,"Trait of helper objects to write out messages as bytes,…",N,N],[16,"Item",E,"The type of items consumed by the `Encoder`",10,N],[16,"Error",E,"The type of encoding errors.",10,N],[10,"encode",E,"Encodes a frame into the buffer provided.",10,[[["self"],[R[297]]],[R[10]]]],[0,"udp",R[300],"UDP framing",N,N],[3,R[323],R[306],R[301],N,N],[11,"new",E,"Create a new `UdpFramed` backed by the given socket and…",11,[[["c"],[R[52]]],["udpframed"]]],[11,R[20],E,R[285],11,[[["self"]],[R[52]]]],[11,R[21],E,R[286],11,[[["self"]],[R[52]]]],[11,R[17],E,"Consumes the `Framed`, returning its underlying I/O stream.",11,[[],[R[52]]]],[0,"compat",R[300],"Compatibility between the `tokio::io` and `futures-io`…",N,N],[3,"Compat",R[307],"A compatibility layer that allows conversion between the…",N,N],[8,R[324],E,R[302],N,N],[11,"compat",E,R[303],12,[[],["compat"]]],[8,R[325],E,R[302],N,N],[11,R[304],E,R[303],13,[[],["compat"]]],[8,R[326],E,R[302],N,N],[11,"compat",E,R[303],14,[[],["compat"]]],[8,R[327],E,R[302],N,N],[11,R[304],E,R[303],15,[[],["compat"]]],[11,R[20],E,"Get a reference to the `Future`, `Stream`, `AsyncRead`, or…",16,[[["self"]],[T]]],[11,R[21],E,"Get a mutable reference to the `Future`, `Stream`,…",16,[[["self"]],[T]]],[11,R[17],E,"Returns the wrapped item.",16,[[],[T]]],[11,"into",R[296],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[153],E,E,2,[[["self"]],[T]]],[11,R[149],E,E,2,[[["self"],[T]]]],[11,R[147],E,E,2,[[[U]],[R[10]]]],[11,R[148],E,E,2,[[],[R[10]]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[146],E,E,2,[[["self"]],[T]]],[11,R[150],E,E,2,[[["self"]],["typeid"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[147],E,E,3,[[[U]],[R[10]]]],[11,R[148],E,E,3,[[],[R[10]]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[146],E,E,3,[[["self"]],[T]]],[11,R[150],E,E,3,[[["self"]],["typeid"]]],[11,R[151],E,E,3,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[147],E,E,0,[[[U]],[R[10]]]],[11,R[148],E,E,0,[[],[R[10]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[146],E,E,0,[[["self"]],[T]]],[11,R[150],E,E,0,[[["self"]],["typeid"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[147],E,E,4,[[[U]],[R[10]]]],[11,R[148],E,E,4,[[],[R[10]]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[146],E,E,4,[[["self"]],[T]]],[11,R[150],E,E,4,[[["self"]],["typeid"]]],[11,R[151],E,E,4,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[147],E,E,5,[[[U]],[R[10]]]],[11,R[148],E,E,5,[[],[R[10]]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[146],E,E,5,[[["self"]],[T]]],[11,R[150],E,E,5,[[["self"]],["typeid"]]],[11,R[151],E,E,5,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[153],E,E,8,[[["self"]],[T]]],[11,R[149],E,E,8,[[["self"],[T]]]],[11,R[147],E,E,8,[[[U]],[R[10]]]],[11,R[148],E,E,8,[[],[R[10]]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[146],E,E,8,[[["self"]],[T]]],[11,R[150],E,E,8,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[152],E,E,1,[[["self"]],["string"]]],[11,R[147],E,E,1,[[[U]],[R[10]]]],[11,R[148],E,E,1,[[],[R[10]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[146],E,E,1,[[["self"]],[T]]],[11,R[150],E,E,1,[[["self"]],["typeid"]]],[11,"into",R[305],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[153],E,E,7,[[["self"]],[T]]],[11,R[149],E,E,7,[[["self"],[T]]]],[11,R[147],E,E,7,[[[U]],[R[10]]]],[11,R[148],E,E,7,[[],[R[10]]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[146],E,E,7,[[["self"]],[T]]],[11,R[150],E,E,7,[[["self"]],["typeid"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[152],E,E,17,[[["self"]],["string"]]],[11,R[147],E,E,17,[[[U]],[R[10]]]],[11,R[148],E,E,17,[[],[R[10]]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[146],E,E,17,[[["self"]],[T]]],[11,R[150],E,E,17,[[["self"]],["typeid"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[147],E,E,6,[[[U]],[R[10]]]],[11,R[148],E,E,6,[[],[R[10]]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[146],E,E,6,[[["self"]],[T]]],[11,R[150],E,E,6,[[["self"]],["typeid"]]],[11,"into",R[306],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[147],E,E,11,[[[U]],[R[10]]]],[11,R[148],E,E,11,[[],[R[10]]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[146],E,E,11,[[["self"]],[T]]],[11,R[150],E,E,11,[[["self"]],["typeid"]]],[11,R[151],E,E,11,[[[R[11]],["s"],["pin"]],[["poll",[R[48]]],[R[48],[R[10]]]]]],[11,"into",R[307],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[153],E,E,16,[[["self"]],[T]]],[11,R[149],E,E,16,[[["self"],[T]]]],[11,R[147],E,E,16,[[[U]],[R[10]]]],[11,R[148],E,E,16,[[],[R[10]]]],[11,"borrow",E,E,16,[[["self"]],[T]]],[11,R[146],E,E,16,[[["self"]],[T]]],[11,R[150],E,E,16,[[["self"]],["typeid"]]],[11,"decode",R[296],E,2,[[["self"],[R[297]]],[[R[10],[R[48],"error"]],[R[48],[R[297]]],["error"]]]],[11,"decode",R[305],E,6,[[["self"],[R[297]]],[[R[10],[R[48]]],[R[48],[R[297]]]]]],[11,"decode",R[296],E,8,[[["self"],[R[297]]],[[R[308]],[R[10],[R[48],R[308]]],[R[48],["string"]]]]],[11,R[309],E,E,8,[[["self"],[R[297]]],[[R[308]],[R[10],[R[48],R[308]]],[R[48],["string"]]]]],[11,"encode",E,E,2,[[["self"],["bytes"],[R[297]]],[["error"],[R[10],["error"]]]]],[11,"encode",R[305],E,6,[[["self"],["bytes"],[R[297]]],[["error"],[R[10],["error"]]]]],[11,"encode",R[296],E,8,[[["self"],["string"],[R[297]]],[[R[308]],[R[10],[R[308]]]]]],[11,"from",E,E,1,[[["error"]],[R[308]]]],[11,"clone",E,E,2,[[["self"]],[R[310]]]],[11,"clone",R[305],E,7,[[["self"]],[R[340]]]],[11,"clone",R[296],E,8,[[["self"]],[R[311]]]],[11,"clone",R[307],E,16,[[["self"]],["compat"]]],[11,R[176],R[296],E,2,[[],[R[310]]]],[11,R[176],R[305],E,6,[[],["self"]]],[11,R[176],E,E,7,[[],["self"]]],[11,R[176],R[296],E,8,[[],["self"]]],[11,"cmp",E,E,2,[[[R[310]],["self"]],[R[167]]]],[11,"cmp",E,E,8,[[["self"],[R[311]]],[R[167]]]],[11,"eq",E,E,2,[[[R[310]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[310]],["self"]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[311]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[311]]],["bool"]]],[11,R[169],E,E,2,[[[R[310]],["self"]],[[R[48],[R[167]]],[R[167]]]]],[11,"lt",E,E,2,[[[R[310]],["self"]],["bool"]]],[11,"le",E,E,2,[[[R[310]],["self"]],["bool"]]],[11,"gt",E,E,2,[[[R[310]],["self"]],["bool"]]],[11,"ge",E,E,2,[[[R[310]],["self"]],["bool"]]],[11,R[169],E,E,8,[[["self"],[R[311]]],[[R[48],[R[167]]],[R[167]]]]],[11,"lt",E,E,8,[[["self"],[R[311]]],["bool"]]],[11,"le",E,E,8,[[["self"],[R[311]]],["bool"]]],[11,"gt",E,E,8,[[["self"],[R[311]]],["bool"]]],[11,"ge",E,E,8,[[["self"],[R[311]]],["bool"]]],[11,"fmt",R[305],E,17,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[296],E,1,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,2,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,3,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,0,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,4,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,5,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[305],E,7,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,6,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,17,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[296],E,8,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",E,E,1,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[306],E,11,[[["self"],[R[168]]],[R[10]]]],[11,"fmt",R[307],E,16,[[["self"],[R[168]]],[R[10]]]],[11,"hash",R[296],E,2,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,R[87],R[307],E,16,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[93],E,E,16,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,16,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[97],E,E,16,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[80],E,E,16,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[170],E,E,16,[[["self"],["usize"],["pin"]]]],[11,R[183],R[296],E,3,[[[R[11]],["self"],["pin"]],[["poll",[R[48]]],[R[48]]]]],[11,R[183],E,E,4,[[[R[11]],["self"],["pin"]],[["poll",[R[48]]],[R[48]]]]],[11,R[183],E,E,5,[[[R[11]],["self"],["pin"]],[["poll",[R[48]]],[R[48]]]]],[11,R[183],R[306],E,11,[[[R[11]],["self"],["pin"]],[["poll",[R[48]]],[R[48]]]]],[11,R[312],R[296],E,3,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[313],E,E,3,[[["self"],["i"],["pin"]],[R[10]]]],[11,R[95],E,E,3,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[314],E,E,3,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[312],E,E,4,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[313],E,E,4,[[["self"],["i"],["pin"]],[R[10]]]],[11,R[95],E,E,4,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[314],E,E,4,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[312],E,E,5,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[313],E,E,5,[[["self"],["i"],["pin"]],[R[10]]]],[11,R[95],E,E,5,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[314],E,E,5,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[312],R[306],E,11,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[313],E,E,11,[[["self"],["pin"]],[R[10]]]],[11,R[95],E,E,11,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[314],E,E,11,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[87],R[307],E,16,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[93],E,E,16,[[[R[11]],["self"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[95],E,E,16,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[314],E,E,16,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[80],E,E,16,[[[R[11]],["self"],["pin"]],[["poll",[R[10]]],[R[10]]]]],[11,R[170],E,E,16,[[["self"],["usize"],["pin"]]]],[11,R[309],R[296],R[315],9,[[["self"],[R[297]]],[[R[10],[R[48]]],[R[48]]]]],[11,"framed",E,R[283],9,[[["sized"],[R[299]],[R[298]]],[["sized"],[R[298]],[R[299]],["framed"]]]]],"p":[[3,R[316]],[4,R[317]],[3,R[318]],[3,"Framed"],[3,R[319]],[3,R[320]],[3,R[321]],[3,R[341]],[3,R[322]],[8,"Decoder"],[8,"Encoder"],[3,R[323]],[8,R[324]],[8,R[325]],[8,R[326]],[8,R[327]],[3,"Compat"],[3,R[328]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);